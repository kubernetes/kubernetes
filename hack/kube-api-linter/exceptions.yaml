# Exceptions for kube-api-linter.
# Exceptions are used for kube-api-linter to ignore existing issues that cannot be fixed without breaking changes.

# Pre-existing issues from the conditions linter

# Conditions generally should be a metav1.Condition, and should not use custom condition types.
- text: "Conditions field in StorageVersionStatus|StatefulSetStatus|DeploymentStatus|DaemonSetStatus|ReplicaSetStatus|HorizontalPodAutoscalerStatus|JobStatus|CertificateSigningRequestStatus|PersistentVolumeClaimStatus|ReplicationControllerStatus|ServiceStatus|NodeStatus|NamespaceStatus|ComponentStatus|PodStatus|FlowSchemaStatus|PriorityLevelConfigurationStatus|FlowSchemaStatus|PriorityLevelConfigurationStatus|PodDisruptionBudgetStatus|AllocatedDeviceStatus|Endpoint|StatefulSetStatus|DeploymentStatus|DaemonSetStatus|ReplicaSetStatus|HorizontalPodAutoscalerStatus|JobStatus|CertificateSigningRequestStatus|PersistentVolumeClaimStatus|ReplicationControllerStatus|ServiceStatus|NodeStatus|NamespaceStatus|ComponentStatus|PodStatus|FlowSchemaStatus|PriorityLevelConfigurationStatus|FlowSchemaStatus|PriorityLevelConfigurationStatus|PodDisruptionBudgetStatus|AllocatedDeviceStatus|Endpoint|StorageVersionMigrationStatus must be a slice of metav1.Condition"
  path: "staging/src/k8s.io/api/"

# Conditions should have patch strategy markers, but changing these after shipping a client is a breaking change.
# Clients would treat these as atomic, when the patch strategy should be merge.
- text: "Conditions field in ValidatingAdmissionPolicyStatus is missing the following markers: patchStrategy=merge, patchMergeKey=type"
  path: "staging/src/k8s.io/api/admissionregistration/"
- text: "Conditions field in ValidatingAdmissionPolicyStatus has incorrect tags, should be: `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,3,rep,name=conditions\"`"
  path: "staging/src/k8s.io/api/admissionregistration/"
- text: "Conditions field in PodDisruptionBudgetStatus has incorrect tags, should be: `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`"
  path: "staging/src/k8s.io/api/policy/"
- text: "Conditions field in AllocatedDeviceStatus is missing the following markers: patchStrategy=merge, patchMergeKey=type"
  path: "staging/src/k8s.io/api/resource/"
- text: "Conditions field in AllocatedDeviceStatus has incorrect tags, should be: `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,5,rep,name=conditions\"`"
  path: "staging/src/k8s.io/api/resource/"


# notimestamp: Legacy 'Timestamp' fields retained for backward compatibility
- text: 'notimestamp: naming convention "notimestamp": field ExpirationTimestamp: prefer use of the term ''time'' over ''timestamp'''
  path: "staging/src/k8s.io/api/authentication/v1/types.go"
- text: 'notimestamp: naming convention "notimestamp": field Timestamps: prefer use of the term ''time'' over ''timestamp'''
  path: "staging/src/k8s.io/api/core/v1/types.go"
- text: 'notimestamp: naming convention "notimestamp": field FirstTimestamp: prefer use of the term ''time'' over ''timestamp'''
  path: "staging/src/k8s.io/api/core/v1/types.go"
- text: 'notimestamp: naming convention "notimestamp": field LastTimestamp: prefer use of the term ''time'' over ''timestamp'''
  path: "staging/src/k8s.io/api/core/v1/types.go"
- text: 'notimestamp: naming convention "notimestamp": field DeprecatedFirstTimestamp: prefer use of the term ''time'' over ''timestamp'''
  path: "staging/src/k8s.io/api/events/v1/types.go"
- text: 'notimestamp: naming convention "notimestamp": field DeprecatedLastTimestamp: prefer use of the term ''time'' over ''timestamp'''
  path: "staging/src/k8s.io/api/events/v1/types.go"
- text: 'notimestamp: naming convention "notimestamp": field DeprecatedFirstTimestamp: prefer use of the term ''time'' over ''timestamp'''
  path: "staging/src/k8s.io/api/events/v1beta1/types.go"
- text: 'notimestamp: naming convention "notimestamp": field DeprecatedLastTimestamp: prefer use of the term ''time'' over ''timestamp'''
  path: "staging/src/k8s.io/api/events/v1beta1/types.go"
- text: 'notimestamp: naming convention "notimestamp": field AllocationTimestamp: prefer use of the term ''time'' over ''timestamp'''
  path: "staging/src/k8s.io/api/resource/v1/types.go"
- text: 'notimestamp: naming convention "notimestamp": field AllocationTimestamp: prefer use of the term ''time'' over ''timestamp'''
  path: "staging/src/k8s.io/api/resource/v1beta1/types.go"
- text: 'notimestamp: naming convention "notimestamp": field AllocationTimestamp: prefer use of the term ''time'' over ''timestamp'''
  path: "staging/src/k8s.io/api/resource/v1beta2/types.go"


# Pre-existing issues from the conflictmarkers linter
# The Error field in some older API types is marked as both optional and required.
# This is incorrect, but cannot be changed without breaking changes.
- text: "field PortStatus.Error has conflicting markers: optional_vs_required: {\\[optional\\], \\[kubebuilder:validation:Required\\]}. fields cannot be both optional and required"
  path: "staging/src/k8s.io/api/core/v1/types.go"
- text: "field IngressPortStatus.Error has conflicting markers: optional_vs_required: {\\[optional\\], \\[kubebuilder:validation:Required\\]}. fields cannot be both optional and required"
  path: "staging/src/k8s.io/api/extensions/v1beta1/types.go"
- text: "field IngressPortStatus.Error has conflicting markers: optional_vs_required: {\\[optional\\], \\[kubebuilder:validation:Required\\]}. fields cannot be both optional and required"
  path: "staging/src/k8s.io/api/networking/v1/types.go"
- text: "field IngressPortStatus.Error has conflicting markers: optional_vs_required: {\\[optional\\], \\[kubebuilder:validation:Required\\]}. fields cannot be both optional and required"
  path: "staging/src/k8s.io/api/networking/v1beta1/types.go"


