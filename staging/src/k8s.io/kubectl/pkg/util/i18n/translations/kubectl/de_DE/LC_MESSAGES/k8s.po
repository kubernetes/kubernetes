# German translation.
# Copyright (C) 2017
# This file is distributed under the same license as the Kubernetes package.
# FIRST AUTHOR steffenschmitz@hotmail.de, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: kubernetes\n"
"Report-Msgid-Bugs-To: EMAIL\n"
"POT-Creation-Date: 2021-07-07 20:15+0200\n"
"PO-Revision-Date: 2017-09-02 01:36+0200\n"
"Last-Translator: Steffen Schmitz <steffenschmitz@hotmail.de>\n"
"Language-Team: Steffen Schmitz <steffenschmitz@hotmail.de>\n"
"Language: de_DE\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Generator: Poedit 1.8.7.1\n"
"X-Poedit-SourceCharset: UTF-8\n"

#: staging/src/k8s.io/kubectl/pkg/cmd/top/top_node.go:62
msgid ""
"\n"
"\t\t  # Show metrics for all nodes\n"
"\t\t  kubectl top node\n"
"\n"
"\t\t  # Show metrics for a given node\n"
"\t\t  kubectl top node NODE_NAME"
msgstr ""
"\n"
"\t\t  # Zeige Metriken für alle Nodes\n"
"\t\t  kubectl top node\n"
"\n"
"\t\t  # Zeige Metriken für den gegebenen Node\n"
"\t\t  kubectl top node NODE_NAME"

#: staging/src/k8s.io/kubectl/pkg/cmd/explain/explain.go:46
msgid ""
"\n"
"\t\t# Get the documentation of the resource and its fields\n"
"\t\tkubectl explain pods\n"
"\n"
"\t\t# Get the documentation of a specific field of a resource\n"
"\t\tkubectl explain pods.spec.containers"
msgstr ""
"\n"
"\t\t# Erhalte die Dokumentation einer Resource und ihrer Felder\n"
"\t\tkubectl explain pods\n"
"\n"
"\t\t# Erhalte die Dokumentation eines speziellen Felds einer Resource\n"
"\t\tkubectl explain pods.spec.containers"

#: staging/src/k8s.io/kubectl/pkg/cmd/options/options.go:29
msgid ""
"\n"
"\t\t# Print flags inherited by all commands\n"
"\t\tkubectl options"
msgstr ""
"\n"
"\t\t# Gebe Optionen aus, die an alle Kommandos vererbt werden\n"
"\t\tkubectl options"

#: staging/src/k8s.io/kubectl/pkg/cmd/version/version.go:44
msgid ""
"\n"
"\t\t# Print the client and server versions for the current context\n"
"\t\tkubectl version"
msgstr ""
"\n"
"\t\t# Gebe die Client- und Server-Versionen des aktuellen Kontexts aus\n"
"\t\tkubectl version"

#: staging/src/k8s.io/kubectl/pkg/cmd/apiresources/apiversions.go:34
msgid ""
"\n"
"\t\t# Print the supported API versions\n"
"\t\tkubectl api-versions"
msgstr ""
"\n"
"\t\t# Gebe die unterstützten API Versionen aus\n"
"\t\tkubectl api-versions"

#: staging/src/k8s.io/kubectl/pkg/cmd/top/top_pod.go:75
msgid ""
"\n"
"\t\t# Show metrics for all pods in the default namespace\n"
"\t\tkubectl top pod\n"
"\n"
"\t\t# Show metrics for all pods in the given namespace\n"
"\t\tkubectl top pod --namespace=NAMESPACE\n"
"\n"
"\t\t# Show metrics for a given pod and its containers\n"
"\t\tkubectl top pod POD_NAME --containers\n"
"\n"
"\t\t# Show metrics for the pods defined by label name=myLabel\n"
"\t\tkubectl top pod -l name=myLabel"
msgstr ""
"\n"
"\t\t# Zeige Metriken für alle Pods im Namespace default\n"
"\t\tkubectl top pod\n"
"\n"
"\t\t# Zeige Metriken für alle Pods im gegebenen namespace\n"
"\t\tkubectl top pod --namespace=NAMESPACE\n"
"\n"
"\t\t# Zeige Metriken für den gebenen Pod und seine Container\n"
"\t\tkubectl top pod POD_NAME --containers\n"
"\n"
"\t\t# Zeige Metriken für Pods mit dem Label name=myLabel\n"
"\t\tkubectl top pod -l name=myLabel"

#: pkg/kubectl/cmd/convert/convert.go:40
msgid ""
"\n"
"\t\tConvert config files between different API versions. Both YAML\n"
"\t\tand JSON formats are accepted.\n"
"\n"
"\t\tThe command takes filename, directory, or URL as input, and convert it "
"into format\n"
"\t\tof version specified by --output-version flag. If target version is not "
"specified or\n"
"\t\tnot supported, convert to latest version.\n"
"\n"
"\t\tThe default output will be printed to stdout in YAML format. One can use "
"-o option\n"
"\t\tto change to output destination."
msgstr ""
"\n"
"\t\tKonvertiere Konfigurationsdateien zwischen API Versionen. Sowohl YAML-\n"
"\t\talsauch JSON-Formate werden akzeptiert.\n"
"\n"
"\t\tDer Befehlt akzeptiert Dateinamen, Ordner  oder URL als Parameter und "
"konvertiert es ins Format\n"
"\t\tder mit --output-version gegebenen Version. Wenn die Zielversion nicht \n"
"\t\tangegeben wird oder ungültig ist, wird die neueste Version verwendet.\n"
"\n"
"\t\tDie Standardausgabe wird auf stdout im YAML-Format ausgegeben. Man kann "
"die Option -o verwenden,\n"
"\t\tum das Ausgabeziel festzulegen."

#: staging/src/k8s.io/kubectl/pkg/cmd/create/create_namespace.go:39
msgid ""
"\n"
"\t\tCreate a namespace with the specified name."
msgstr ""
"\n"
"\t\tErstelle einen Namespace mit dem gegebenen Namen."

#: staging/src/k8s.io/kubectl/pkg/cmd/create/create_role.go:43
msgid ""
"\n"
"\t\tCreate a role with single rule."
msgstr ""
"\n"
"\t\tErstelle eine Role mit einer einzelnen Rule."

#: staging/src/k8s.io/kubectl/pkg/cmd/create/create_serviceaccount.go:40
msgid ""
"\n"
"\t\tCreate a service account with the specified name."
msgstr ""
"\n"
"\t\tErstelle einen ServiceAccount mit dem gegebenen Namen."

#: staging/src/k8s.io/kubectl/pkg/cmd/drain/drain.go:84
msgid ""
"\n"
"\t\tMark node as schedulable."
msgstr ""
"\n"
"\t\tMarkiere Knoten als schedulable."

#: staging/src/k8s.io/kubectl/pkg/cmd/drain/drain.go:55
msgid ""
"\n"
"\t\tMark node as unschedulable."
msgstr ""
"\n"
"\t\tMarkiere Knoten als unschedulable."

#: staging/src/k8s.io/kubectl/pkg/cmd/apply/apply_set_last_applied.go:70
msgid ""
"\n"
"\t\tSet the latest last-applied-configuration annotations by setting it to "
"match the contents of a file.\n"
"\t\tThis results in the last-applied-configuration being updated as though "
"'kubectl apply -f <file>' was run,\n"
"\t\twithout updating any other parts of the object."
msgstr ""
"\n"
"\t\tSetze die aktuelle Annotation Last-Applied-Configuration auf den Inhalt "
"der Datei.\n"
"\t\tDas bedeutet, dass Last-Applied-Configuration aktualisiert wird, als ob "
"'kubectl apply -f <file>' ausgeführt wurde,\n"
"\t\tohne andere Teile des Objekts zu aktualisieren."

#: staging/src/k8s.io/kubectl/pkg/cmd/create/create_namespace.go:42
msgid ""
"\n"
"\t  # Create a new namespace named my-namespace\n"
"\t  kubectl create namespace my-namespace"
msgstr ""
"\n"
"\t  # Erstelle einen neuen Namespace my-namespace\n"
"\t  kubectl create namespace my-namespace"

#: staging/src/k8s.io/kubectl/pkg/cmd/create/create_serviceaccount.go:43
msgid ""
"\n"
"\t  # Create a new service account named my-service-account\n"
"\t  kubectl create serviceaccount my-service-account"
msgstr ""
"\n"
"\t  # Erstelle einen neuen ServiceAccount my-service-account\n"
"\t  kubectl create serviceaccount my-service-account"

#: staging/src/k8s.io/kubectl/pkg/cmd/create/create_service.go:344
msgid ""
"\n"
"\tCreate an ExternalName service with the specified name.\n"
"\n"
"\tExternalName service references to an external DNS address instead of\n"
"\tonly pods, which will allow application authors to reference services\n"
"\tthat exist off platform, on other clusters, or locally."
msgstr ""
"\n"
"\tErstelle einen ExternalName-Service mit den gegebenen Namen.\n"
"\n"
"\tExternalName service referenziert eine externe DNS Adresse statt\n"
"\teines pods, was Anwendungsautoren erlaubt, einen Service zu "
"referenzieren,\n"
"\tder abseits der Platform, auf anderen Clustern oder lokal exisiert."

#: staging/src/k8s.io/kubectl/pkg/cmd/help/help.go:28
msgid ""
"\n"
"\tHelp provides help for any command in the application.\n"
"\tSimply type kubectl help [path to command] for full details."
msgstr ""
"\n"
"\tHelp hilft bei jedem Befehl in der Anwendung.\n"
"\tGib einfach kubectl help [path to command] für alle Details ein."

#: staging/src/k8s.io/kubectl/pkg/cmd/create/create_service.go:311
msgid ""
"\n"
"    # Create a new LoadBalancer service named my-lbs\n"
"    kubectl create service loadbalancer my-lbs --tcp=5678:8080"
msgstr ""
"\n"
"    # Erstelle einen neuen LoadBalancer-Service my-lbs\n"
"    kubectl create service loadbalancer my-lbs --tcp=5678:8080"

#: staging/src/k8s.io/kubectl/pkg/cmd/clusterinfo/clusterinfo_dump.go:102
msgid ""
"\n"
"    # Dump current cluster state to stdout\n"
"    kubectl cluster-info dump\n"
"\n"
"    # Dump current cluster state to /path/to/cluster-state\n"
"    kubectl cluster-info dump --output-directory=/path/to/cluster-state\n"
"\n"
"    # Dump all namespaces to stdout\n"
"    kubectl cluster-info dump --all-namespaces\n"
"\n"
"    # Dump a set of namespaces to /path/to/cluster-state\n"
"    kubectl cluster-info dump --namespaces default,kube-system --output-"
"directory=/path/to/cluster-state"
msgstr ""
"\n"
"    # Schreibe den aktuellen Cluster-Zustand auf stdout\n"
"    kubectl cluster-info dump\n"
"\n"
"    # Schreibe aktuellen Cluster-Zustand in /path/to/cluster-state\n"
"    kubectl cluster-info dump --output-directory=/path/to/cluster-state\n"
"\n"
"    # Schreibe alle Namespaces auf stdout\n"
"    kubectl cluster-info dump --all-namespaces\n"
"\n"
"    # Schreibe eine Menge an Namespaces in /path/to/cluster-state\n"
"    kubectl cluster-info dump --namespaces default,kube-system --output-"
"directory=/path/to/cluster-state"

#: staging/src/k8s.io/kubectl/pkg/cmd/create/create_service.go:308
msgid ""
"\n"
"    Create a LoadBalancer service with the specified name."
msgstr ""
"\n"
"    Erstelle einen LoadBalancer-Service mit dem gegebenen Namen."

#: staging/src/k8s.io/kubectl/pkg/cmd/create/create_quota.go:107
msgid ""
"A comma-delimited set of quota scopes that must all match each object "
"tracked by the quota."
msgstr ""
"Eine komma-separierte Menge von Quota-Scopes, die zu jedem Object passen "
"muss, dass von der Quota betroffen ist."

#: staging/src/k8s.io/kubectl/pkg/cmd/create/create_quota.go:106
msgid ""
"A comma-delimited set of resource=quantity pairs that define a hard limit."
msgstr ""
"Eine komma-separierte Menge von resource=quantity Paaren, die ein hartes "
"Limit definieren."

#: staging/src/k8s.io/kubectl/pkg/cmd/create/create_pdb.go:113
msgid ""
"A label selector to use for this budget. Only equality-based selector "
"requirements are supported."
msgstr ""
"Ein Label-Selektor, der für das Budget benutzt werden kann. Nur gleichheits-"
"basierte Auswahlkriterien werden unterstützt."

#: staging/src/k8s.io/kubectl/pkg/cmd/expose/expose.go:152
msgid ""
"A label selector to use for this service. Only equality-based selector "
"requirements are supported. If empty (the default) infer the selector from "
"the replication controller or replica set.)"
msgstr ""
"Ein Label-Selektor, der für den Service benutzt werden kann. Nur gleichheits-"
"basierte Auswahlkriterien werden unterstützt. Wenn er leer ist (standard), "
"wird der Selektor vom ReplicationController oder ReplicaSet abgeleitet"

#: staging/src/k8s.io/kubectl/pkg/cmd/expose/expose.go:157
msgid ""
"Additional external IP address (not managed by Kubernetes) to accept for the "
"service. If this IP is routed to a node, the service can be accessed by this "
"IP in addition to its generated service IP."
msgstr ""
"Zusätzliche, externe IP Adressen (die nicht von Kubernetes verwaltet "
"werden), die der Service akzeptieren soll. Wenn diese IP zu einem Knoten "
"gerouted wird, kann der Service über die IP angesprochen werden, zusätzlich "
"zu seiner generierten Service-IP."

#: staging/src/k8s.io/kubectl/pkg/cmd/certificates/certificates.go:125
msgid "Approve a certificate signing request"
msgstr "Genehmige eine Certificate-Signing-Request"

#: staging/src/k8s.io/kubectl/pkg/cmd/create/create_service.go:263
msgid ""
"Assign your own ClusterIP or set to 'None' for a 'headless' service (no "
"loadbalancing)."
msgstr ""
"Weise Deine eigene ClusterIP zu oder setze sie auf 'None' für einen "
"'headless'-Service (kein LoadBalancing)."

#: staging/src/k8s.io/kubectl/pkg/cmd/attach/attach.go:105
msgid "Attach to a running container"
msgstr "Weise einem laufenden Container zu"

#: staging/src/k8s.io/kubectl/pkg/cmd/expose/expose.go:161
msgid ""
"ClusterIP to be assigned to the service. Leave empty to auto-allocate, or "
"set to 'None' to create a headless service."
msgstr ""
"ClusterIP, die dem Service zugewiesen werden soll. Freilassen, für "
"automatische Zuweisung oder auf 'None' setzen für einen headless-Service."

#: staging/src/k8s.io/kubectl/pkg/cmd/create/create_clusterrolebinding.go:101
msgid "ClusterRole this ClusterRoleBinding should reference"
msgstr "ClusterRole, die das ClusterRoleBinding referenzieren soll"

#: staging/src/k8s.io/kubectl/pkg/cmd/create/create_rolebinding.go:104
msgid "ClusterRole this RoleBinding should reference"
msgstr "ClusterRole, die das RoleBinding referenzieren soll"

#: pkg/kubectl/cmd/convert/convert.go:95
msgid "Convert config files between different API versions"
msgstr "Konvertiere Config-Dateien zwischen verschiedenen API Versionen"

#: staging/src/k8s.io/kubectl/pkg/cmd/cp/cp.go:106
msgid "Copy files and directories to and from containers."
msgstr "Kopiere Dateien und Ordner aus/in Container(n)."

#: staging/src/k8s.io/kubectl/pkg/cmd/create/create_secret_tls.go:94
msgid "Create a TLS secret"
msgstr "Erstelle ein TLS-Secret"

#: staging/src/k8s.io/kubectl/pkg/cmd/create/create_namespace.go:83
msgid "Create a namespace with the specified name"
msgstr "Erstelle einen Namespace mit dem gegebenen Namen"

#: staging/src/k8s.io/kubectl/pkg/cmd/create/create_secret_docker.go:134
msgid "Create a secret for use with a Docker registry"
msgstr "Erstelle ein Secret für die Benutzung mit einer Docker-Registry"

#: staging/src/k8s.io/kubectl/pkg/cmd/create/create_secret.go:49
msgid "Create a secret using specified subcommand"
msgstr "Erstelle ein Secret mit dem angegebenen Sub-Befehl"

#: staging/src/k8s.io/kubectl/pkg/cmd/create/create_serviceaccount.go:85
msgid "Create a service account with the specified name"
msgstr "Erstelle einen ServiceAccount mit dem gegebenen Namen"

#: staging/src/k8s.io/kubectl/pkg/cmd/config/delete_cluster.go:42
msgid "Delete the specified cluster from the kubeconfig"
msgstr "Lösche das angegebene Cluster aus der kubeconfig"

#: staging/src/k8s.io/kubectl/pkg/cmd/config/delete_context.go:42
msgid "Delete the specified context from the kubeconfig"
msgstr "Lösche den angegebenen Kontext aus der kubeconfig"

#: staging/src/k8s.io/kubectl/pkg/cmd/certificates/certificates.go:174
msgid "Deny a certificate signing request"
msgstr "Lehne eine Certificate-Signing-Request ab"

#: staging/src/k8s.io/kubectl/pkg/cmd/config/get_contexts.go:72
msgid "Describe one or many contexts"
msgstr "Beschreibe einen oder mehrere Kontexte"

#: staging/src/k8s.io/kubectl/pkg/cmd/config/get_clusters.go:41
msgid "Display clusters defined in the kubeconfig"
msgstr "Zeige Cluster, die in der kubeconfig definiert sind"

#: staging/src/k8s.io/kubectl/pkg/cmd/config/view.go:81
msgid "Display merged kubeconfig settings or a specified kubeconfig file"
msgstr ""
"Zeige vereinte kubeconfig-Einstellungen oder die angegebene kubeconfig-Datei"

#: staging/src/k8s.io/kubectl/pkg/cmd/get/get.go:165
msgid "Display one or many resources"
msgstr "Zeige eine oder mehrere Resourcen"

#: staging/src/k8s.io/kubectl/pkg/cmd/drain/drain.go:184
msgid "Drain node in preparation for maintenance"
msgstr "Leere Knoten, um eine Wartung vorzubereiten"

#: staging/src/k8s.io/kubectl/pkg/cmd/edit/edit.go:77
msgid "Edit a resource on the server"
msgstr "Bearbeite eine Resource auf dem Server"

#: staging/src/k8s.io/kubectl/pkg/cmd/create/create_secret_docker.go:152
msgid "Email for Docker registry"
msgstr "E-Mail für Docker-Registry"

#: staging/src/k8s.io/kubectl/pkg/cmd/exec/exec.go:89
msgid "Execute a command in a container"
msgstr "Führe einen Befehl im Container aus"

#: staging/src/k8s.io/kubectl/pkg/cmd/portforward/portforward.go:109
msgid "Forward one or more local ports to a pod"
msgstr "Leite einen oder mehrere lokale Ports an einen Pod weiter"

#: staging/src/k8s.io/kubectl/pkg/cmd/help/help.go:37
msgid "Help about any command"
msgstr "Hilfe für jeden Befehl"

#: staging/src/k8s.io/kubectl/pkg/cmd/drain/drain.go:98
msgid "Mark node as schedulable"
msgstr "Markiere Knoten als schedulable"

#: staging/src/k8s.io/kubectl/pkg/cmd/drain/drain.go:69
msgid "Mark node as unschedulable"
msgstr "Markiere Knoten als unschedulable"

#: staging/src/k8s.io/kubectl/pkg/cmd/rollout/rollout_pause.go:83
msgid "Mark the provided resource as paused"
msgstr "Markiere die gegebene Resource als pausiert"

#: staging/src/k8s.io/kubectl/pkg/cmd/certificates/certificates.go:49
#: staging/src/k8s.io/kubectl/pkg/cmd/certificates/certificates.go:50
msgid "Modify certificate resources."
msgstr "Verändere Certificate-Resources"

#: staging/src/k8s.io/kubectl/pkg/cmd/config/config.go:42
msgid "Modify kubeconfig files"
msgstr "Verändere kubeconfig Dateien"

#: staging/src/k8s.io/kubectl/pkg/cmd/expose/expose.go:156
msgid ""
"Name or number for the port on the container that the service should direct "
"traffic to. Optional."
msgstr ""
"Name oder Nummer des Ports in dem Container, zu dem der Service Daten leiten "
"soll. Optional."

#: staging/src/k8s.io/kubectl/pkg/cmd/logs/logs.go:174
msgid ""
"Only return logs after a specific date (RFC3339). Defaults to all logs. Only "
"one of since-time / since may be used."
msgstr ""
"Zeige nur Logs nach einem bestimmten Datum (RFC3339) an. Zeigt standardmäßig "
"alle logs. Es kann entweder since-time oder since benutzt werden."

#: staging/src/k8s.io/kubectl/pkg/cmd/completion/completion.go:112
msgid "Output shell completion code for the specified shell (bash or zsh)"
msgstr "Zeige Shell-Completion-Code für die angegebene Shell (bash oder zsh)"

#: staging/src/k8s.io/kubectl/pkg/cmd/create/create_secret_docker.go:151
msgid "Password for Docker registry authentication"
msgstr "Passwort für die Authentifizierung bei der Docker-Registry"

#: staging/src/k8s.io/kubectl/pkg/cmd/create/create_secret_tls.go:110
msgid "Path to PEM encoded public key certificate."
msgstr "Pfad des Public-Key-Zertifikats im PEM-Format."

#: staging/src/k8s.io/kubectl/pkg/cmd/create/create_secret_tls.go:111
msgid "Path to private key associated with given certificate."
msgstr "Pfad zum Private-Key, der zum gegebenen Zertifikat passt."

#: staging/src/k8s.io/kubectl/pkg/cmd/scale/scale.go:130
msgid ""
"Precondition for resource version. Requires that the current resource "
"version match this value in order to scale."
msgstr ""
"Vorbedingung für Resource-Version. Verlangt, dass die aktuelle Resource-"
"Version diesen Wert erfüllt, um zu skalieren."

#: staging/src/k8s.io/kubectl/pkg/cmd/version/version.go:73
msgid "Print the client and server version information"
msgstr "Schreibt die Client- und Server-Versionsinformation"

#: staging/src/k8s.io/kubectl/pkg/cmd/options/options.go:38
#: staging/src/k8s.io/kubectl/pkg/cmd/options/options.go:39
msgid "Print the list of flags inherited by all commands"
msgstr "Schreibt die Liste von Optionen, die alle Befehle erben"

#: staging/src/k8s.io/kubectl/pkg/cmd/logs/logs.go:152
msgid "Print the logs for a container in a pod"
msgstr "Schreibt die Logs für einen Container in einem Pod"

#: staging/src/k8s.io/kubectl/pkg/cmd/rollout/rollout_resume.go:87
msgid "Resume a paused resource"
msgstr "Setze eine pausierte Resource fort"

#: staging/src/k8s.io/kubectl/pkg/cmd/create/create_rolebinding.go:105
msgid "Role this RoleBinding should reference"
msgstr "Role, die dieses RoleBinding referenzieren soll"

#: staging/src/k8s.io/kubectl/pkg/cmd/run/run.go:152
msgid "Run a particular image on the cluster"
msgstr "Starte ein bestimmtes Image auf dem Cluster"

#: staging/src/k8s.io/kubectl/pkg/cmd/proxy/proxy.go:119
msgid "Run a proxy to the Kubernetes API server"
msgstr "Starte einen Proxy zum Kubernetes-API-Server"

#: staging/src/k8s.io/kubectl/pkg/cmd/set/set.go:39
msgid "Set specific features on objects"
msgstr "Setze bestimmte Features auf Objekten"

#: staging/src/k8s.io/kubectl/pkg/cmd/set/set_selector.go:104
msgid "Set the selector on a resource"
msgstr "Setze den Selektor auf einer Resource"

#: staging/src/k8s.io/kubectl/pkg/cmd/describe/describe.go:107
msgid "Show details of a specific resource or group of resources"
msgstr "Zeige Details zu einer bestimmten Resource oder Gruppe von Resourcen"

#: staging/src/k8s.io/kubectl/pkg/cmd/rollout/rollout_status.go:102
msgid "Show the status of the rollout"
msgstr "Zeige den Status des Rollout"

#: staging/src/k8s.io/kubectl/pkg/cmd/expose/expose.go:154
msgid "Synonym for --target-port"
msgstr "Synonym für --target-port"

#: staging/src/k8s.io/kubectl/pkg/cmd/run/run.go:174
msgid "The image for the container to run."
msgstr "Das Image, dass auf dem Container gestartet werden soll."

#: staging/src/k8s.io/kubectl/pkg/cmd/run/run.go:176
msgid ""
"The image pull policy for the container. If left empty, this value will not "
"be specified by the client and defaulted by the server"
msgstr ""
"Die Image-Pull-Policy für den Container. Wenn leer, wird der Wert nicht vom "
"Client gesetzt, sondern standardmäßig vom Server."

#: staging/src/k8s.io/kubectl/pkg/cmd/create/create_pdb.go:111
msgid ""
"The minimum number or percentage of available pods this budget requires."
msgstr ""
"Die minimale Anzahl oder Prozentzahl von verfügbaren Pods, die das Budget "
"voraussetzt."

#: staging/src/k8s.io/kubectl/pkg/cmd/expose/expose.go:159
msgid "The name for the newly created object."
msgstr "Der Name des neu erstellten Objekts."

#: staging/src/k8s.io/kubectl/pkg/cmd/autoscale/autoscale.go:125
msgid ""
"The name for the newly created object. If not specified, the name of the "
"input resource will be used."
msgstr ""
"Der Name des neu erstellten Objekts. Falls nicht angegeben, wird der Name "
"der Input-Resource verwendet."

#: staging/src/k8s.io/kubectl/pkg/cmd/expose/expose.go:147
msgid ""
"The name of the API generator to use. There are 2 generators: 'service/v1' "
"and 'service/v2'. The only difference between them is that service port in "
"v1 is named 'default', while it is left unnamed in v2. Default is 'service/"
"v2'."
msgstr ""
"Der Name des zu verwendenden API-Generators. Es gibt zwei Generatoren: "
"'service/v1' und 'service/v2'. Der einzige Unterschied ist, dass der "
"Serviceport in v1 'default' heißt, während er in v2 unbenannt bleibt. "
"Standard ist 'service/v2'."

#: staging/src/k8s.io/kubectl/pkg/cmd/expose/expose.go:148
msgid "The network protocol for the service to be created. Default is 'TCP'."
msgstr ""
"Das Netzwerkprotokoll, für den zu erstellenden Service. Standard ist 'TCP'."

#: staging/src/k8s.io/kubectl/pkg/cmd/expose/expose.go:149
msgid ""
"The port that the service should serve on. Copied from the resource being "
"exposed, if unspecified"
msgstr ""
"Der Port auf den der Service hören soll. Wird von der angebotenen Resource "
"kopiert, falls nicht angegeben"

#: staging/src/k8s.io/kubectl/pkg/cmd/create/create_secret.go:155
msgid "The type of secret to create"
msgstr "Der Typ des zu erstellenden Secrets"

#: staging/src/k8s.io/kubectl/pkg/cmd/rollout/rollout_undo.go:87
msgid "Undo a previous rollout"
msgstr "Widerrufe ein vorheriges Rollout"

#: staging/src/k8s.io/kubectl/pkg/cmd/set/set_resources.go:116
msgid "Update resource requests/limits on objects with pod templates"
msgstr "Aktualisiere Resourcen requests/limits auf Objekten mit Pod-Templates"

#: staging/src/k8s.io/kubectl/pkg/cmd/annotate/annotate.go:135
msgid "Update the annotations on a resource"
msgstr "Aktualisiere die Annotationen auf einer Resource"

#: staging/src/k8s.io/kubectl/pkg/cmd/label/label.go:133
msgid "Update the labels on a resource"
msgstr "Aktualisiere die Labels auf einer Resource"

#: staging/src/k8s.io/kubectl/pkg/cmd/taint/taint.go:109
msgid "Update the taints on one or more nodes"
msgstr "Aktualisiere die Taints auf einem oder mehreren Knoten"

#: staging/src/k8s.io/kubectl/pkg/cmd/create/create_secret_docker.go:150
msgid "Username for Docker registry authentication"
msgstr "Username für Authentifizierung bei der Docker-Registry"

#: staging/src/k8s.io/kubectl/pkg/cmd/rollout/rollout_history.go:83
msgid "View rollout history"
msgstr "Zeige rollout-Verlauf"

#: staging/src/k8s.io/kubectl/pkg/cmd/cmd.go:227
msgid "kubectl controls the Kubernetes cluster manager"
msgstr "kubectl kontrolliert den Kubernetes-Cluster-Manager"

#~ msgid ""
#~ "\n"
#~ "\t\t  # Create a ClusterRoleBinding for user1, user2, and group1 using "
#~ "the cluster-admin ClusterRole\n"
#~ "\t\t  kubectl create clusterrolebinding cluster-admin --"
#~ "clusterrole=cluster-admin --user=user1 --user=user2 --group=group1"
#~ msgstr ""
#~ "\n"
#~ "\t\t # Erstellt ein ClusterRoleBinding für user1, user2 und group1 mit "
#~ "der ClusterRole cluster-admin\n"
#~ "\t\t  kubectl create clusterrolebinding cluster-admin --"
#~ "clusterrole=cluster-admin --user=user1 --user=user2 --group=group1"

#~ msgid ""
#~ "\n"
#~ "\t\t  # Create a RoleBinding for user1, user2, and group1 using the admin "
#~ "ClusterRole\n"
#~ "\t\t  kubectl create rolebinding admin --clusterrole=admin --user=user1 --"
#~ "user=user2 --group=group1"
#~ msgstr ""
#~ "\n"
#~ "\t\t  # Erstellt ein RoleBinding für user1, user2 und group1 mit der "
#~ "ClusterRole admin\n"
#~ "\t\t  kubectl create rolebinding admin --clusterrole=admin --user=user1 --"
#~ "user=user2 --group=group1"

#~ msgid ""
#~ "\n"
#~ "\t\t  # Create a new configmap named my-config based on folder bar\n"
#~ "\t\t  kubectl create configmap my-config --from-file=path/to/bar\n"
#~ "\n"
#~ "\t\t  # Create a new configmap named my-config with specified keys "
#~ "instead of file basenames on disk\n"
#~ "\t\t  kubectl create configmap my-config --from-file=key1=/path/to/bar/"
#~ "file1.txt --from-file=key2=/path/to/bar/file2.txt\n"
#~ "\n"
#~ "\t\t  # Create a new configmap named my-config with key1=config1 and "
#~ "key2=config2\n"
#~ "\t\t  kubectl create configmap my-config --from-literal=key1=config1 --"
#~ "from-literal=key2=config2"
#~ msgstr ""
#~ "\n"
#~ "\t\t  # Erstellt eine neue ConfigMap mit dem Namen my-config basierend "
#~ "auf dem Ordner bar\n"
#~ "\t\t  kubectl create configmap my-config --from-file=path/to/bar\n"
#~ "\n"
#~ "\t\t  # Erstellt eine neue ConfigMap mit dem Namen my-config mit den "
#~ "angegebenen Keys statt des Dateinamens auf der Festplatte.\n"
#~ "\t\t  kubectl create configmap my-config --from-file=key1=/path/to/bar/"
#~ "file1.txt --from-file=key2=/path/to/bar/file2.txt\n"
#~ "\n"
#~ "\t\t  # Erstellt eine neue ConfigMap mit dem Namen my-config mit "
#~ "key1=config1 und key2=config2\n"
#~ "\t\t  kubectl create configmap my-config --from-literal=key1=config1 --"
#~ "from-literal=key2=config2"

#~ msgid ""
#~ "\n"
#~ "\t\t  # If you don't already have a .dockercfg file, you can create a "
#~ "dockercfg secret directly by using:\n"
#~ "\t\t  kubectl create secret docker-registry my-secret --docker-"
#~ "server=DOCKER_REGISTRY_SERVER --docker-username=DOCKER_USER --docker-"
#~ "password=DOCKER_PASSWORD --docker-email=DOCKER_EMAIL"
#~ msgstr ""
#~ "\n"
#~ "\t\t  # Wenn keine .dockercfg Datei existiert, kann direkt ein dockercfg "
#~ "Secret erstellen mit:\n"
#~ "\t\t  kubectl create secret docker-registry my-secret --docker-"
#~ "server=DOCKER_REGISTRY_SERVER --docker-username=DOCKER_USER --docker-"
#~ "password=DOCKER_PASSWORD --docker-email=DOCKER_EMAIL"

#~ msgid ""
#~ "\n"
#~ "\t\t# Apply the configuration in pod.json to a pod.\n"
#~ "\t\tkubectl apply -f ./pod.json\n"
#~ "\n"
#~ "\t\t# Apply the JSON passed into stdin to a pod.\n"
#~ "\t\tcat pod.json | kubectl apply -f -\n"
#~ "\n"
#~ "\t\t# Note: --prune is still in Alpha\n"
#~ "\t\t# Apply the configuration in manifest.yaml that matches label "
#~ "app=nginx and delete all the other resources that are not in the file and "
#~ "match label app=nginx.\n"
#~ "\t\tkubectl apply --prune -f manifest.yaml -l app=nginx\n"
#~ "\n"
#~ "\t\t# Apply the configuration in manifest.yaml and delete all the other "
#~ "configmaps that are not in the file.\n"
#~ "\t\tkubectl apply --prune -f manifest.yaml --all --prune-allowlist=core/"
#~ "v1/ConfigMap"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Wende die Konfiguration in pod.json auf einen Pod an.\n"
#~ "\t\tkubectl apply -f ./pod.json\n"
#~ "\n"
#~ "\t\t# Wende die JSON-Daten von stdin auf einen Pod an.\n"
#~ "\t\tcat pod.json | kubectl apply -f -\n"
#~ "\n"
#~ "\t\t# Hinweis: --prune ist noch in Alpha\n"
#~ "\t\t# Wende die Konfiguration, mit dem Label app=nginx, im manifest.yaml "
#~ "an und lösche alle Resourcen, die nicht in der Datei sind oder nicht das "
#~ "Label app=nginx besitzen.\n"
#~ "\t\tkubectl apply --prune -f manifest.yaml -l app=nginx\n"
#~ "\n"
#~ "\t\t# Wende die Konfiguration im manifest.yaml an und lösche alle "
#~ "ConfigMaps, die nicht in der Datei sind.\n"
#~ "\t\tkubectl apply --prune -f manifest.yaml --all --prune-allowlist=core/"
#~ "v1/ConfigMap"

#, c-format
#~ msgid ""
#~ "\n"
#~ "\t\t# Auto scale a deployment \"foo\", with the number of pods between 2 "
#~ "and 10, no target CPU utilization specified so a default autoscaling "
#~ "policy will be used:\n"
#~ "\t\tkubectl autoscale deployment foo --min=2 --max=10\n"
#~ "\n"
#~ "\t\t# Auto scale a replication controller \"foo\", with the number of "
#~ "pods between 1 and 5, target CPU utilization at 80%:\n"
#~ "\t\tkubectl autoscale rc foo --max=5 --cpu-percent=80"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Auto-skaliere ein Deployment \"foo\", mit einer Anzahl an Pods "
#~ "zwischen 2 und 10, eine Ziel-CPU-Auslastung ist angegeben, sodass eine "
#~ "Standard-autoskalierungsregel verwendet wird:\n"
#~ "\t\tkubectl autoscale deployment foo --min=2 --max=10\n"
#~ "\n"
#~ "\t\t# Auto-skaliere einen Replication-Controller \"foo\", mit einer "
#~ "Anzahl an Pods zwischen 1 und 5, mit einer Ziel-CPU-Auslastung von 80%:\n"
#~ "\t\tkubectl autoscale rc foo --max=5 --cpu-percent=80"

#~ msgid ""
#~ "\n"
#~ "\t\t# Convert 'pod.yaml' to latest version and print to stdout.\n"
#~ "\t\tkubectl convert -f pod.yaml\n"
#~ "\n"
#~ "\t\t# Convert the live state of the resource specified by 'pod.yaml' to "
#~ "the latest version\n"
#~ "\t\t# and print to stdout in json format.\n"
#~ "\t\tkubectl convert -f pod.yaml --local -o json\n"
#~ "\n"
#~ "\t\t# Convert all files under current directory to latest version and "
#~ "create them all.\n"
#~ "\t\tkubectl convert -f . | kubectl create -f -"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Konvertiere 'pod.yaml' zur neuesten Version und schreibe auf "
#~ "stdout.\n"
#~ "\t\tkubectl convert -f pod.yaml\n"
#~ "\n"
#~ "\t\t# Konvertiere den aktuellen Zustand der Resource, die in 'pod.yaml' "
#~ "angegeben ist, zur neuesten Version\n"
#~ "\t\t# und schreibe auf stdout im JSON-Format.\n"
#~ "\t\tkubectl convert -f pod.yaml --local -o json\n"
#~ "\n"
#~ "\t\t# Konvertiere alle Dateien im aktuellen Ordner zur neuesten Version "
#~ "und erstelle sie.\n"
#~ "\t\tkubectl convert -f . | kubectl create -f -"

#~ msgid ""
#~ "\n"
#~ "\t\t# Create a ClusterRole named \"pod-reader\" that allows user to "
#~ "perform \"get\", \"watch\" and \"list\" on pods\n"
#~ "\t\tkubectl create clusterrole pod-reader --verb=get,list,watch --"
#~ "resource=pods\n"
#~ "\n"
#~ "\t\t# Create a ClusterRole named \"pod-reader\" with ResourceName "
#~ "specified\n"
#~ "\t\tkubectl create clusterrole pod-reader --verb=get,list,watch --"
#~ "resource=pods --resource-name=readablepod"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Erstellt eine ClusterRole \"pod-reader\", die es Nutzern erlaubt "
#~ "\"get\", \"watch\" und \"list\" auf den Pods auszuführen\n"
#~ "\t\tkubectl create clusterrole pod-reader --verb=get,list,watch --"
#~ "resource=pods\n"
#~ "\n"
#~ "\t\t# Erstellt eine ClusterRole \"pod-reader\" mit dem angegebenen "
#~ "ResourceName\n"
#~ "\t\tkubectl create clusterrole pod-reader --verb=get,list,watch --"
#~ "resource=pods --resource-name=readablepod"

#~ msgid ""
#~ "\n"
#~ "\t\t# Create a Role named \"pod-reader\" that allows user to perform \"get"
#~ "\", \"watch\" and \"list\" on pods\n"
#~ "\t\tkubectl create role pod-reader --verb=get --verb=list --verb=watch --"
#~ "resource=pods\n"
#~ "\n"
#~ "\t\t# Create a Role named \"pod-reader\" with ResourceName specified\n"
#~ "\t\tkubectl create role pod-reader --verb=get --verg=list --verb=watch --"
#~ "resource=pods --resource-name=readablepod"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Erstellt eine Role \"pod-reader\", die es dem Nutzer erlaubt \"get"
#~ "\", \"watch\" und \"list\" auf den Pods auszuführen\n"
#~ "\t\tkubectl create role pod-reader --verb=get --verb=list --verb=watch --"
#~ "resource=pods\n"
#~ "\n"
#~ "\t\t# Erstellt eine Role \"pod-reader\" mit dem angegebenen ResourceName\n"
#~ "\t\tkubectl create role pod-reader --verb=get --verg=list --verb=watch --"
#~ "resource=pods --resource-name=readablepod"

#~ msgid ""
#~ "\n"
#~ "\t\t# Create a new resourcequota named my-quota\n"
#~ "\t\tkubectl create quota my-quota --hard=cpu=1,memory=1G,pods=2,"
#~ "services=3,replicationcontrollers=2,resourcequotas=1,secrets=5,"
#~ "persistentvolumeclaims=10\n"
#~ "\n"
#~ "\t\t# Create a new resourcequota named best-effort\n"
#~ "\t\tkubectl create quota best-effort --hard=pods=100 --scopes=BestEffort"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Erstellt eine neue ResourceQuota my-quota\n"
#~ "\t\tkubectl create quota my-quota --hard=cpu=1,memory=1G,pods=2,"
#~ "services=3,replicationcontrollers=2,resourcequotas=1,secrets=5,"
#~ "persistentvolumeclaims=10\n"
#~ "\n"
#~ "\t\t# Erstellt eine neue ResourceQuota best-effort\n"
#~ "\t\tkubectl create quota best-effort --hard=pods=100 --scopes=BestEffort"

#, c-format
#~ msgid ""
#~ "\n"
#~ "\t\t# Create a pod disruption budget named my-pdb that will select all "
#~ "pods with the app=rails label\n"
#~ "\t\t# and require at least one of them being available at any point in "
#~ "time.\n"
#~ "\t\tkubectl create poddisruptionbudget my-pdb --selector=app=rails --min-"
#~ "available=1\n"
#~ "\n"
#~ "\t\t# Create a pod disruption budget named my-pdb that will select all "
#~ "pods with the app=nginx label\n"
#~ "\t\t# and require at least half of the pods selected to be available at "
#~ "any point in time.\n"
#~ "\t\tkubectl create pdb my-pdb --selector=app=nginx --min-available=50%"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Erstellt ein Pod-Disruption-Budget my-pdb, dass alle Pods mit dem "
#~ "Label app=rails auswählt\n"
#~ "\t\t# und sicherstellt, dass mindestens einer von ihnen zu jedem "
#~ "Zeitpunkt verfügbar ist.\n"
#~ "\t\tkubectl create poddisruptionbudget my-pdb --selector=app=rails --min-"
#~ "available=1\n"
#~ "\n"
#~ "\t\t# Erstellt ein Pod-Disruption-Budget my-pdb, dass alle Pods mit dem "
#~ "Label app=nginx auswählt\n"
#~ "\t\t# und sicherstellt, dass mindestens die Hälfte der gewählten Pods zu "
#~ "jedem Zeitpunkt verfügbar ist.\n"
#~ "\t\tkubectl create pdb my-pdb --selector=app=nginx --min-available=50%"

#~ msgid ""
#~ "\n"
#~ "\t\t# Create a pod using the data in pod.json.\n"
#~ "\t\tkubectl create -f ./pod.json\n"
#~ "\n"
#~ "\t\t# Create a pod based on the JSON passed into stdin.\n"
#~ "\t\tcat pod.json | kubectl create -f -\n"
#~ "\n"
#~ "\t\t# Edit the data in docker-registry.yaml in JSON using the v1 API "
#~ "format then create the resource using the edited data.\n"
#~ "\t\tkubectl create -f docker-registry.yaml --edit --output-version=v1 -o "
#~ "json"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Erstellt einen Pod mit den Daten in pod.json.\n"
#~ "\t\tkubectl create -f ./pod.json\n"
#~ "\n"
#~ "\t\t# Erstellt einen Pod basierend auf den JSON-Daten von stdin.\n"
#~ "\t\tcat pod.json | kubectl create -f -\n"
#~ "\n"
#~ "\t\t# Verändert die Daten in docker-registry.yaml in JSON mit dem v1 API "
#~ "Format und erstellt eine Resource mit den veränderten Daten.\n"
#~ "\t\tkubectl create -f docker-registry.yaml --edit --output-version=v1 -o "
#~ "json"

#~ msgid ""
#~ "\n"
#~ "\t\t# Create a service for a replicated nginx, which serves on port 80 "
#~ "and connects to the containers on port 8000.\n"
#~ "\t\tkubectl expose rc nginx --port=80 --target-port=8000\n"
#~ "\n"
#~ "\t\t# Create a service for a replication controller identified by type "
#~ "and name specified in \"nginx-controller.yaml\", which serves on port 80 "
#~ "and connects to the containers on port 8000.\n"
#~ "\t\tkubectl expose -f nginx-controller.yaml --port=80 --target-port=8000\n"
#~ "\n"
#~ "\t\t# Create a service for a pod valid-pod, which serves on port 444 with "
#~ "the name \"frontend\"\n"
#~ "\t\tkubectl expose pod valid-pod --port=444 --name=frontend\n"
#~ "\n"
#~ "\t\t# Create a second service based on the above service, exposing the "
#~ "container port 8443 as port 443 with the name \"nginx-https\"\n"
#~ "\t\tkubectl expose service nginx --port=443 --target-port=8443 --"
#~ "name=nginx-https\n"
#~ "\n"
#~ "\t\t# Create a service for a replicated streaming application on port "
#~ "4100 balancing UDP traffic and named 'video-stream'.\n"
#~ "\t\tkubectl expose rc streamer --port=4100 --protocol=udp --name=video-"
#~ "stream\n"
#~ "\n"
#~ "\t\t# Create a service for a replicated nginx using replica set, which "
#~ "serves on port 80 and connects to the containers on port 8000.\n"
#~ "\t\tkubectl expose rs nginx --port=80 --target-port=8000\n"
#~ "\n"
#~ "\t\t# Create a service for an nginx deployment, which serves on port 80 "
#~ "and connects to the containers on port 8000.\n"
#~ "\t\tkubectl expose deployment nginx --port=80 --target-port=8000"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Erstellt einen Service für einen replizierten nginx, der auf Port "
#~ "80 hört und verbindet sich mit den Containern auf Port 8000.\n"
#~ "\t\tkubectl expose rc nginx --port=80 --target-port=8000\n"
#~ "\n"
#~ "\t\t# Erstellt einen Service für einen Replication-Controller, der über "
#~ "type und name in \"nginx-controller.yaml\" identifiziert wird, auf Port "
#~ "80 hört und verbindet sich mit den Containern auf Port 8000.\n"
#~ "\t\tkubectl expose -f nginx-controller.yaml --port=80 --target-port=8000\n"
#~ "\n"
#~ "\t\t# Erstellt einen Service, mit dem Namen \"frontend\", für einen Pod "
#~ "valid-pod, der auf port 444 hört\n"
#~ "\t\tkubectl expose pod valid-pod --port=444 --name=frontend\n"
#~ "\n"
#~ "\t\t# Erstellt einen zweiten Service basierend auf dem vorherigen "
#~ "Service, der den Container Port 8443 auf Port 443 mit dem Namen \"nginx-"
#~ "https\" anbietet\n"
#~ "\t\tkubectl expose service nginx --port=443 --target-port=8443 --"
#~ "name=nginx-https\n"
#~ "\n"
#~ "\t\t# Erstellt einen Service für eine Replicated-Streaming-Application "
#~ "auf Port 4100, die UDP-Traffic verarbeitet und 'video-stream' heißt.\n"
#~ "\t\tkubectl expose rc streamer --port=4100 --protocol=udp --name=video-"
#~ "stream\n"
#~ "\n"
#~ "\t\t# Erstellt einen Service für einen replizierten nginx mit einem "
#~ "Replica-Set, dass auf Port 80 hört und verbindet sich mit den Containern "
#~ "auf Port 8000.\n"
#~ "\t\tkubectl expose rs nginx --port=80 --target-port=8000\n"
#~ "\n"
#~ "\t\t# Erstellt einen Service für ein nginx Deployment, dass auf Port 80 "
#~ "hört und verbindet sich mit den Containern auf Port 8000.\n"
#~ "\t\tkubectl expose deployment nginx --port=80 --target-port=8000"

#~ msgid ""
#~ "\n"
#~ "\t\t# Delete a pod using the type and name specified in pod.json.\n"
#~ "\t\tkubectl delete -f ./pod.json\n"
#~ "\n"
#~ "\t\t# Delete a pod based on the type and name in the JSON passed into "
#~ "stdin.\n"
#~ "\t\tcat pod.json | kubectl delete -f -\n"
#~ "\n"
#~ "\t\t# Delete pods and services with same names \"baz\" and \"foo\"\n"
#~ "\t\tkubectl delete pod,service baz foo\n"
#~ "\n"
#~ "\t\t# Delete pods and services with label name=myLabel.\n"
#~ "\t\tkubectl delete pods,services -l name=myLabel\n"
#~ "\n"
#~ "\t\t# Delete a pod with minimal delay\n"
#~ "\t\tkubectl delete pod foo --now\n"
#~ "\n"
#~ "\t\t# Force delete a pod on a dead node\n"
#~ "\t\tkubectl delete pod foo --grace-period=0 --force\n"
#~ "\n"
#~ "\t\t# Delete all pods\n"
#~ "\t\tkubectl delete pods --all"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Löscht einen Pod mit type und name aus pod.json.\n"
#~ "\t\tkubectl delete -f ./pod.json\n"
#~ "\n"
#~ "\t\t# Löscht einen Pod mit dem type und name aus den JSON-Daten von "
#~ "stdin.\n"
#~ "\t\tcat pod.json | kubectl delete -f -\n"
#~ "\n"
#~ "\t\t# Löscht Pods und Services mit den Namen \"baz\" und \"foo\"\n"
#~ "\t\tkubectl delete pod,service baz foo\n"
#~ "\n"
#~ "\t\t# Löscht Pods und Services mit dem Label name=myLabel.\n"
#~ "\t\tkubectl delete pods,services -l name=myLabel\n"
#~ "\n"
#~ "\t\t# Löscht einen Pod mit minimaler Verzögerung\n"
#~ "\t\tkubectl delete pod foo --now\n"
#~ "\n"
#~ "\t\t# Erzwingt das Löschen eines Pods auf einem toten Node\n"
#~ "\t\tkubectl delete pod foo --grace-period=0 --force\n"
#~ "\n"
#~ "\t\t# Löscht alle Pods\n"
#~ "\t\tkubectl delete pods --all"

#~ msgid ""
#~ "\n"
#~ "\t\t# Describe a node\n"
#~ "\t\tkubectl describe nodes kubernetes-node-emt8.c.myproject.internal\n"
#~ "\n"
#~ "\t\t# Describe a pod\n"
#~ "\t\tkubectl describe pods/nginx\n"
#~ "\n"
#~ "\t\t# Describe a pod identified by type and name in \"pod.json\"\n"
#~ "\t\tkubectl describe -f pod.json\n"
#~ "\n"
#~ "\t\t# Describe all pods\n"
#~ "\t\tkubectl describe pods\n"
#~ "\n"
#~ "\t\t# Describe pods by label name=myLabel\n"
#~ "\t\tkubectl describe po -l name=myLabel\n"
#~ "\n"
#~ "\t\t# Describe all pods managed by the 'frontend' replication controller "
#~ "(rc-created pods\n"
#~ "\t\t# get the name of the rc as a prefix in the pod the name).\n"
#~ "\t\tkubectl describe pods frontend"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Beschreibt einen Knoten\n"
#~ "\t\tkubectl describe nodes kubernetes-node-emt8.c.myproject.internal\n"
#~ "\n"
#~ "\t\t# Beschreibt einen Pod\n"
#~ "\t\tkubectl describe pods/nginx\n"
#~ "\n"
#~ "\t\t# Beschreibt einen Pod mit type und name aus \"pod.json\"\n"
#~ "\t\tkubectl describe -f pod.json\n"
#~ "\n"
#~ "\t\t# Beschreibt alle Pods\n"
#~ "\t\tkubectl describe pods\n"
#~ "\n"
#~ "\t\t# Beschreibt Pods mit dem Label name=myLabel\n"
#~ "\t\tkubectl describe po -l name=myLabel\n"
#~ "\n"
#~ "\t\t# Beschreibt alle Pods, die vom ReplicationController 'frontend' "
#~ "verwaltet werden (rc-erstellte Pods\n"
#~ "\t\t# bekommen den Namen des rc als Prefix im Podnamen).\n"
#~ "\t\tkubectl describe pods frontend"

#~ msgid ""
#~ "\n"
#~ "\t\t# Drain node \"foo\", even if there are pods not managed by a "
#~ "ReplicationController, ReplicaSet, Job, DaemonSet or StatefulSet on it.\n"
#~ "\t\t$ kubectl drain foo --force\n"
#~ "\n"
#~ "\t\t# As above, but abort if there are pods not managed by a "
#~ "ReplicationController, ReplicaSet, Job, DaemonSet or StatefulSet, and use "
#~ "a grace period of 15 minutes.\n"
#~ "\t\t$ kubectl drain foo --grace-period=900"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Leere den Knoten \"foo\", selbst wenn er Pods enthält, die nicht "
#~ "von einem ReplicationController, ReplicaSet, Job, DaemonSet oder "
#~ "StatefulSet verwaltet werden.\n"
#~ "\t\t$ kubectl drain foo --force\n"
#~ "\n"
#~ "\t\t# Wie zuvor, aber es wird abgebrochen, wenn er Pods enthält, die "
#~ "nicht von einem ReplicationController, ReplicaSet, Job, DaemonSet oder "
#~ "StatefulSet verwaltet werden und mit einer Schonfrist von 15 Minuten.\n"
#~ "\t\t$ kubectl drain foo --grace-period=900"

#~ msgid ""
#~ "\n"
#~ "\t\t# Edit the service named 'docker-registry':\n"
#~ "\t\tkubectl edit svc/docker-registry\n"
#~ "\n"
#~ "\t\t# Use an alternative editor\n"
#~ "\t\tKUBE_EDITOR=\"nano\" kubectl edit svc/docker-registry\n"
#~ "\n"
#~ "\t\t# Edit the job 'myjob' in JSON using the v1 API format:\n"
#~ "\t\tkubectl edit job.v1.batch/myjob -o json\n"
#~ "\n"
#~ "\t\t# Edit the deployment 'mydeployment' in YAML and save the modified "
#~ "config in its annotation:\n"
#~ "\t\tkubectl edit deployment/mydeployment -o yaml --save-config"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Bearbeite den Service 'docker-registry':\n"
#~ "\t\tkubectl edit svc/docker-registry\n"
#~ "\n"
#~ "\t\t# Benutze einen anderen Editor\n"
#~ "\t\tKUBE_EDITOR=\"nano\" kubectl edit svc/docker-registry\n"
#~ "\n"
#~ "\t\t# Bearbeite den Job 'myjob' in JSON mit dem v1 API Format:\n"
#~ "\t\tkubectl edit job.v1.batch/myjob -o json\n"
#~ "\n"
#~ "\t\t# Bearbeite das Deployment 'mydeployment' in YAML und speichere die "
#~ "veränderte Konfiguration in ihrer Annotation:\n"
#~ "\t\tkubectl edit deployment/mydeployment -o yaml --save-config"

#~ msgid ""
#~ "\n"
#~ "\t\t# Get output from running 'date' from pod 123456-7890, using the "
#~ "first container by default\n"
#~ "\t\tkubectl exec 123456-7890 date\n"
#~ "\n"
#~ "\t\t# Get output from running 'date' in ruby-container from pod "
#~ "123456-7890\n"
#~ "\t\tkubectl exec 123456-7890 -c ruby-container date\n"
#~ "\n"
#~ "\t\t# Switch to raw terminal mode, sends stdin to 'bash' in ruby-"
#~ "container from pod 123456-7890\n"
#~ "\t\t# and sends stdout/stderr from 'bash' back to the client\n"
#~ "\t\tkubectl exec 123456-7890 -c ruby-container -i -t -- bash -il"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Erhalte die Ausgabe vom Aufruf von 'date' auf dem Pod 123456-7890, "
#~ "mit dem ersten Container als Standard\n"
#~ "\t\tkubectl exec 123456-7890 date\n"
#~ "\n"
#~ "\t\t# Erhalte die Ausgabe vom Aufruf von 'date' im Ruby-Container aus dem "
#~ "Pod 123456-7890\n"
#~ "\t\tkubectl exec 123456-7890 -c ruby-container date\n"
#~ "\n"
#~ "\t\t# Wechsle in den Terminal-Modus und sende stdin zu 'bash' im Ruby-"
#~ "Container aus dem Pod 123456-7890\n"
#~ "\t\t# und sende stdout/stderr von 'bash' zurück zum Client\n"
#~ "\t\tkubectl exec 123456-7890 -c ruby-container -i -t -- bash -il"

#~ msgid ""
#~ "\n"
#~ "\t\t# Get output from running pod 123456-7890, using the first container "
#~ "by default\n"
#~ "\t\tkubectl attach 123456-7890\n"
#~ "\n"
#~ "\t\t# Get output from ruby-container from pod 123456-7890\n"
#~ "\t\tkubectl attach 123456-7890 -c ruby-container\n"
#~ "\n"
#~ "\t\t# Switch to raw terminal mode, sends stdin to 'bash' in ruby-"
#~ "container from pod 123456-7890\n"
#~ "\t\t# and sends stdout/stderr from 'bash' back to the client\n"
#~ "\t\tkubectl attach 123456-7890 -c ruby-container -i -t\n"
#~ "\n"
#~ "\t\t# Get output from the first pod of a ReplicaSet named nginx\n"
#~ "\t\tkubectl attach rs/nginx\n"
#~ "\t\t"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Erhalte die Ausgabe vom laufenden Pod 123456-7890, mit dem ersten "
#~ "Container als Standard\n"
#~ "\t\tkubectl attach 123456-7890\n"
#~ "\n"
#~ "\t\t# Erhalte die Ausgabe vom Ruby-Container aus dem Pod 123456-7890\n"
#~ "\t\tkubectl attach 123456-7890 -c ruby-container\n"
#~ "\n"
#~ "\t\t# Wechsle in den Terminal-Modus und sende stdin zu 'bash' im Ruby-"
#~ "Container aus dem Pod 123456-7890\n"
#~ "\t\t# und sende stdout/stderr von 'bash' zurück zum Client\n"
#~ "\t\tkubectl attach 123456-7890 -c ruby-container -i -t\n"
#~ "\n"
#~ "\t\t# Erhalte die Ausgabe vom ersten Pod eines ReplicaSets nginx\n"
#~ "\t\tkubectl attach rs/nginx\n"
#~ "\t\t"

#~ msgid ""
#~ "\n"
#~ "\t\t# Install bash completion on a Mac using homebrew\n"
#~ "\t\tbrew install bash-completion\n"
#~ "\t\tprintf \"\n"
#~ "# Bash completion support\n"
#~ "source $(brew --prefix)/etc/bash_completion\n"
#~ "\" >> $HOME/.bash_profile\n"
#~ "\t\tsource $HOME/.bash_profile\n"
#~ "\n"
#~ "\t\t# Load the kubectl completion code for bash into the current shell\n"
#~ "\t\tsource <(kubectl completion bash)\n"
#~ "\n"
#~ "\t\t# Write bash completion code to a file and source if from ."
#~ "bash_profile\n"
#~ "\t\tkubectl completion bash > ~/.kube/completion.bash.inc\n"
#~ "\t\tprintf \"\n"
#~ "# Kubectl shell completion\n"
#~ "source '$HOME/.kube/completion.bash.inc'\n"
#~ "\" >> $HOME/.bash_profile\n"
#~ "\t\tsource $HOME/.bash_profile\n"
#~ "\n"
#~ "\t\t# Load the kubectl completion code for zsh[1] into the current shell\n"
#~ "\t\tsource <(kubectl completion zsh)"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Installiere bash completion auf einem Mac mit homebrew\n"
#~ "\t\tbrew install bash-completion\n"
#~ "\t\tprintf \"\n"
#~ "# Bash completion support\n"
#~ "source $(brew --prefix)/etc/bash_completion\n"
#~ "\" >> $HOME/.bash_profile\n"
#~ "\t\tsource $HOME/.bash_profile\n"
#~ "\n"
#~ "\t\t# Lade den kubectl-Completion-Code für bash in der aktuellen Shell\n"
#~ "\t\tsource <(kubectl completion bash)\n"
#~ "\n"
#~ "\t\t# Schreibe den Bash-Completion-Code in eine Datei und source sie im ."
#~ "bash_profile\n"
#~ "\t\tkubectl completion bash > ~/.kube/completion.bash.inc\n"
#~ "\t\tprintf \"\n"
#~ "# Kubectl shell completion\n"
#~ "source '$HOME/.kube/completion.bash.inc'\n"
#~ "\" >> $HOME/.bash_profile\n"
#~ "\t\tsource $HOME/.bash_profile\n"
#~ "\n"
#~ "\t\t# Lade den kubectl-Completion-Code für zsh[1] in die aktuelle Shell\n"
#~ "\t\tsource <(kubectl completion zsh)"

#~ msgid ""
#~ "\n"
#~ "\t\t# List all pods in ps output format.\n"
#~ "\t\tkubectl get pods\n"
#~ "\n"
#~ "\t\t# List all pods in ps output format with more information (such as "
#~ "node name).\n"
#~ "\t\tkubectl get pods -o wide\n"
#~ "\n"
#~ "\t\t# List a single replication controller with specified NAME in ps "
#~ "output format.\n"
#~ "\t\tkubectl get replicationcontroller web\n"
#~ "\n"
#~ "\t\t# List a single pod in JSON output format.\n"
#~ "\t\tkubectl get -o json pod web-pod-13je7\n"
#~ "\n"
#~ "\t\t# List a pod identified by type and name specified in \"pod.yaml\" in "
#~ "JSON output format.\n"
#~ "\t\tkubectl get -f pod.yaml -o json\n"
#~ "\n"
#~ "\t\t# Return only the phase value of the specified pod.\n"
#~ "\t\tkubectl get -o template pod/web-pod-13je7 --template={{.status."
#~ "phase}}\n"
#~ "\n"
#~ "\t\t# List all replication controllers and services together in ps output "
#~ "format.\n"
#~ "\t\tkubectl get rc,services\n"
#~ "\n"
#~ "\t\t# List one or more resources by their type and names.\n"
#~ "\t\tkubectl get rc/web service/frontend pods/web-pod-13je7\n"
#~ "\n"
#~ "\t\t# List all resources with different types.\n"
#~ "\t\tkubectl get all"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Liste alle Pods im ps-Format auf.\n"
#~ "\t\tkubectl get pods\n"
#~ "\n"
#~ "\t\t# Liste alle Pods im ps-Format mit zusätzlichen Informationen (wie "
#~ "dem Knotennamen) auf.\n"
#~ "\t\tkubectl get pods -o wide\n"
#~ "\n"
#~ "\t\t# Liste alle einzelnen ReplicationController mit dem angegebenen "
#~ "Namen im ps-Format auf.\n"
#~ "\t\tkubectl get replicationcontroller web\n"
#~ "\n"
#~ "\t\t# Liste einen einzelnen Pod im JSON-Format auf.\n"
#~ "\t\tkubectl get -o json pod web-pod-13je7\n"
#~ "\n"
#~ "\t\t# Liste einen Pod mit Typ und Namen aus \"pod.yaml\" im JSON-Format "
#~ "auf.\n"
#~ "\t\tkubectl get -f pod.yaml -o json\n"
#~ "\n"
#~ "\t\t# Gib nur den phase-Wert des angegebenen Pods zurück.\n"
#~ "\t\tkubectl get -o template pod/web-pod-13je7 --template={{.status."
#~ "phase}}\n"
#~ "\n"
#~ "\t\t# Liste alle ReplicationController und Services im ps-Format auf.\n"
#~ "\t\tkubectl get rc,services\n"
#~ "\n"
#~ "\t\t# Liste eine oder mehrere Resourcen über ihren Typ und Namen auf.\n"
#~ "\t\tkubectl get rc/web service/frontend pods/web-pod-13je7\n"
#~ "\n"
#~ "\t\t# Liste alle Resourcen mit verschiedenen Typen auf.\n"
#~ "\t\tkubectl get all"

#~ msgid ""
#~ "\n"
#~ "\t\t# Listen on ports 5000 and 6000 locally, forwarding data to/from "
#~ "ports 5000 and 6000 in the pod\n"
#~ "\t\tkubectl port-forward mypod 5000 6000\n"
#~ "\n"
#~ "\t\t# Listen on port 8888 locally, forwarding to 5000 in the pod\n"
#~ "\t\tkubectl port-forward mypod 8888:5000\n"
#~ "\n"
#~ "\t\t# Listen on a random port locally, forwarding to 5000 in the pod\n"
#~ "\t\tkubectl port-forward mypod :5000\n"
#~ "\n"
#~ "\t\t# Listen on a random port locally, forwarding to 5000 in the pod\n"
#~ "\t\tkubectl port-forward mypod 0:5000"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Hört lokal auf Port 5000 und 6000 und leitet Daten zum/vom Port "
#~ "5000 und 6000 weiter an den Pod\n"
#~ "\t\tkubectl port-forward mypod 5000 6000\n"
#~ "\n"
#~ "\t\t# Hört lokal auf Port 8888 und leitet an Port 5000 des Pods weiter\n"
#~ "\t\tkubectl port-forward mypod 8888:5000\n"
#~ "\n"
#~ "\t\t# Hört auf einen zufälligen lokalen Port und leitet an Port 5000 des "
#~ "Pods weiter\n"
#~ "\t\tkubectl port-forward mypod :5000\n"
#~ "\n"
#~ "\t\t# Hört auf einen zufälligen lokalen Port und leitet an Port 5000 des "
#~ "Pods weiter\n"
#~ "\t\tkubectl port-forward mypod 0:5000"

#~ msgid ""
#~ "\n"
#~ "\t\t# Mark node \"foo\" as schedulable.\n"
#~ "\t\t$ kubectl uncordon foo"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Markiere Knoten \"foo\" als schedulable.\n"
#~ "\t\t$ kubectl uncordon foo"

#~ msgid ""
#~ "\n"
#~ "\t\t# Mark node \"foo\" as unschedulable.\n"
#~ "\t\tkubectl cordon foo"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Markiere Knoten \"foo\" als unschedulable.\n"
#~ "\t\tkubectl cordon foo"

#~ msgid ""
#~ "\n"
#~ "\t\t# Partially update a node using strategic merge patch\n"
#~ "\t\tkubectl patch node k8s-node-1 -p '{\"spec\":{\"unschedulable\":"
#~ "true}}'\n"
#~ "\n"
#~ "\t\t# Partially update a node identified by the type and name specified "
#~ "in \"node.json\" using strategic merge patch\n"
#~ "\t\tkubectl patch -f node.json -p '{\"spec\":{\"unschedulable\":true}}'\n"
#~ "\n"
#~ "\t\t# Update a container's image; spec.containers[*].name is required "
#~ "because it's a merge key\n"
#~ "\t\tkubectl patch pod valid-pod -p '{\"spec\":{\"containers\":[{\"name\":"
#~ "\"kubernetes-serve-hostname\",\"image\":\"new image\"}]}}'\n"
#~ "\n"
#~ "\t\t# Update a container's image using a json patch with positional "
#~ "arrays\n"
#~ "\t\tkubectl patch pod valid-pod --type='json' -p='[{\"op\": \"replace\", "
#~ "\"path\": \"/spec/containers/0/image\", \"value\":\"new image\"}]'"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Aktualisiere einen Knoten teilweise mit einem Strategic-Merge-"
#~ "Patch\n"
#~ "\t\tkubectl patch node k8s-node-1 -p '{\"spec\":{\"unschedulable\":"
#~ "true}}'\n"
#~ "\n"
#~ "\t\t# Aktualisiere einen Knoten, mit type und name aus \"node.json\", mit "
#~ "einem Strategic-Merge-Patch\n"
#~ "\t\tkubectl patch -f node.json -p '{\"spec\":{\"unschedulable\":true}}'\n"
#~ "\n"
#~ "\t\t# Aktualisiere das Image eines Containers; spec.containers[*].name "
#~ "ist erforderlich, da es der Merge-Key ist\n"
#~ "\t\tkubectl patch pod valid-pod -p '{\"spec\":{\"containers\":[{\"name\":"
#~ "\"kubernetes-serve-hostname\",\"image\":\"new image\"}]}}'\n"
#~ "\n"
#~ "\t\t# Aktualisiere das Image eines Containers mit einem JSON-Patch mit "
#~ "Positional-Arrays\n"
#~ "\t\tkubectl patch pod valid-pod --type='json' -p='[{\"op\": \"replace\", "
#~ "\"path\": \"/spec/containers/0/image\", \"value\":\"new image\"}]'"

#~ msgid ""
#~ "\n"
#~ "\t\t# Print the address of the master and cluster services\n"
#~ "\t\tkubectl cluster-info"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Gebe die Adresse des Masters und des Cluster-Services aus\n"
#~ "\t\tkubectl cluster-info"

#~ msgid ""
#~ "\n"
#~ "\t\t# Replace a pod using the data in pod.json.\n"
#~ "\t\tkubectl replace -f ./pod.json\n"
#~ "\n"
#~ "\t\t# Replace a pod based on the JSON passed into stdin.\n"
#~ "\t\tcat pod.json | kubectl replace -f -\n"
#~ "\n"
#~ "\t\t# Update a single-container pod's image version (tag) to v4\n"
#~ "\t\tkubectl get pod mypod -o yaml | sed 's/\\(image: myimage\\):.*$/:v4/' "
#~ "| kubectl replace -f -\n"
#~ "\n"
#~ "\t\t# Force replace, delete and then re-create the resource\n"
#~ "\t\tkubectl replace --force -f ./pod.json"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Ersetze einen Pod mit den Daten aus pod.json.\n"
#~ "\t\tkubectl replace -f ./pod.json\n"
#~ "\n"
#~ "\t\t# Ersetze einen Pod mit den JSON-Daten von stdin.\n"
#~ "\t\tcat pod.json | kubectl replace -f -\n"
#~ "\n"
#~ "\t\t# Setze die Pod-Image-Version (tag) eines einzelnen Containers zu v4\n"
#~ "\t\tkubectl get pod mypod -o yaml | sed 's/\\(image: myimage\\):.*$/:v4/' "
#~ "| kubectl replace -f -\n"
#~ "\n"
#~ "\t\t# Erzwinge das Ersetzen, Löschen und Neu-Erstellen der Resource\n"
#~ "\t\tkubectl replace --force -f ./pod.json"

#~ msgid ""
#~ "\n"
#~ "\t\t# Return snapshot logs from pod nginx with only one container\n"
#~ "\t\tkubectl logs nginx\n"
#~ "\n"
#~ "\t\t# Return snapshot logs for the pods defined by label app=nginx\n"
#~ "\t\tkubectl logs -lapp=nginx\n"
#~ "\n"
#~ "\t\t# Return snapshot of previous terminated ruby container logs from pod "
#~ "web-1\n"
#~ "\t\tkubectl logs -p -c ruby web-1\n"
#~ "\n"
#~ "\t\t# Begin streaming the logs of the ruby container in pod web-1\n"
#~ "\t\tkubectl logs -f -c ruby web-1\n"
#~ "\n"
#~ "\t\t# Display only the most recent 20 lines of output in pod nginx\n"
#~ "\t\tkubectl logs --tail=20 nginx\n"
#~ "\n"
#~ "\t\t# Show all logs from pod nginx written in the last hour\n"
#~ "\t\tkubectl logs --since=1h nginx\n"
#~ "\n"
#~ "\t\t# Return snapshot logs from first container of a job named hello\n"
#~ "\t\tkubectl logs job/hello\n"
#~ "\n"
#~ "\t\t# Return snapshot logs from container nginx-1 of a deployment named "
#~ "nginx\n"
#~ "\t\tkubectl logs deployment/nginx -c nginx-1"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Gib die Snapshot-Logs des Pods nginx mit nur einem Container "
#~ "zurück\n"
#~ "\t\tkubectl logs nginx\n"
#~ "\n"
#~ "\t\t# Gib die Snapshot-Logs für die Pods mit dem Label app=nginx zurück\n"
#~ "\t\tkubectl logs -lapp=nginx\n"
#~ "\n"
#~ "\t\t# Gib die Snapshot-Logs des zuvor gelöschten Ruby-Containers des Pods "
#~ "web-1 zurück\n"
#~ "\t\tkubectl logs -p -c ruby web-1\n"
#~ "\n"
#~ "\t\t# Starte das Streaming der Logs vom Ruby-Container im Pod web-1\n"
#~ "\t\tkubectl logs -f -c ruby web-1\n"
#~ "\n"
#~ "\t\t# Zeige die letzten 20 Zeilen der Ausgabe des Pods nginx\n"
#~ "\t\tkubectl logs --tail=20 nginx\n"
#~ "\n"
#~ "\t\t# Zeige alle Logs der letzten Stunde des Pods nginx an\n"
#~ "\t\tkubectl logs --since=1h nginx\n"
#~ "\n"
#~ "\t\t# Gib die Snapshot-Logs des ersten Containers des Jobs hello zurück\n"
#~ "\t\tkubectl logs job/hello\n"
#~ "\n"
#~ "\t\t# Gib die Snapshot-Logs des Containers nginx-1 eines Deployments "
#~ "nginx zurück\n"
#~ "\t\tkubectl logs deployment/nginx -c nginx-1"

#~ msgid ""
#~ "\n"
#~ "\t\t# Run a proxy to kubernetes apiserver on port 8011, serving static "
#~ "content from ./local/www/\n"
#~ "\t\tkubectl proxy --port=8011 --www=./local/www/\n"
#~ "\n"
#~ "\t\t# Run a proxy to kubernetes apiserver on an arbitrary local port.\n"
#~ "\t\t# The chosen port for the server will be output to stdout.\n"
#~ "\t\tkubectl proxy --port=0\n"
#~ "\n"
#~ "\t\t# Run a proxy to kubernetes apiserver, changing the api prefix to k8s-"
#~ "api\n"
#~ "\t\t# This makes e.g. the pods api available at localhost:8001/k8s-api/v1/"
#~ "pods/\n"
#~ "\t\tkubectl proxy --api-prefix=/k8s-api"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Starte einen Proxy zum Kubernetes-Apiserver auf Port 8011 und sende "
#~ "statische Inhalte von ./local/www/\n"
#~ "\t\tkubectl proxy --port=8011 --www=./local/www/\n"
#~ "\n"
#~ "\t\t# Starte einen Proxy zum Kubernetes-Apiserver auf einem zufälligen "
#~ "lokalen Port.\n"
#~ "\t\t# Der gewählte Port für den Server wird im stdout zurückgegeben.\n"
#~ "\t\tkubectl proxy --port=0\n"
#~ "\n"
#~ "\t\t# Starte einen Proxy zum Kubernetes-Apiserver und ändere das API-"
#~ "Prefix zu k8s-api\n"
#~ "\t\t# Damit ist die Pods-API bspw. unter localhost:8001/k8s-api/v1/pods/ "
#~ "erreichbar\n"
#~ "\t\tkubectl proxy --api-prefix=/k8s-api"

#~ msgid ""
#~ "\n"
#~ "\t\t# Scale a replicaset named 'foo' to 3.\n"
#~ "\t\tkubectl scale --replicas=3 rs/foo\n"
#~ "\n"
#~ "\t\t# Scale a resource identified by type and name specified in \"foo.yaml"
#~ "\" to 3.\n"
#~ "\t\tkubectl scale --replicas=3 -f foo.yaml\n"
#~ "\n"
#~ "\t\t# If the deployment named mysql's current size is 2, scale mysql to "
#~ "3.\n"
#~ "\t\tkubectl scale --current-replicas=2 --replicas=3 deployment/mysql\n"
#~ "\n"
#~ "\t\t# Scale multiple replication controllers.\n"
#~ "\t\tkubectl scale --replicas=5 rc/foo rc/bar rc/baz\n"
#~ "\n"
#~ "\t\t# Scale job named 'cron' to 3.\n"
#~ "\t\tkubectl scale --replicas=3 job/cron"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Skaliere ein ReplicaSet 'foo' auf 3.\n"
#~ "\t\tkubectl scale --replicas=3 rs/foo\n"
#~ "\n"
#~ "\t\t# Skaliere eine Resource mit type und name aus \"foo.yaml\" auf 3.\n"
#~ "\t\tkubectl scale --replicas=3 -f foo.yaml\n"
#~ "\n"
#~ "\t\t# Wenn die aktuelle Größe des Deployments mysql 2 ist, skaliere mysql "
#~ "auf 3.\n"
#~ "\t\tkubectl scale --current-replicas=2 --replicas=3 deployment/mysql\n"
#~ "\n"
#~ "\t\t# Skaliere mehrere MultiplicationController.\n"
#~ "\t\tkubectl scale --replicas=5 rc/foo rc/bar rc/baz\n"
#~ "\n"
#~ "\t\t# Skaliere den Job cron auf 3.\n"
#~ "\t\tkubectl scale --replicas=3 job/cron"

#~ msgid ""
#~ "\n"
#~ "\t\t# Set the last-applied-configuration of a resource to match the "
#~ "contents of a file.\n"
#~ "\t\tkubectl apply set-last-applied -f deploy.yaml\n"
#~ "\n"
#~ "\t\t# Execute set-last-applied against each configuration file in a "
#~ "directory.\n"
#~ "\t\tkubectl apply set-last-applied -f path/\n"
#~ "\n"
#~ "\t\t# Set the last-applied-configuration of a resource to match the "
#~ "contents of a file, will create the annotation if it does not already "
#~ "exist.\n"
#~ "\t\tkubectl apply set-last-applied -f deploy.yaml --create-"
#~ "annotation=true\n"
#~ "\t\t"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Setze die Last-Applied-Configuration einer Resource auf den Inhalt "
#~ "einer Datei.\n"
#~ "\t\tkubectl apply set-last-applied -f deploy.yaml\n"
#~ "\n"
#~ "\t\t# Führe Set-Last-Applied auf jeder Konfigurationsdatei in einem "
#~ "Ordner aus.\n"
#~ "\t\tkubectl apply set-last-applied -f path/\n"
#~ "\n"
#~ "\t\t# Setze die Last-Applied-Configuration einer Resource auf den Inhalt "
#~ "einer Datei; erstellt die Annotation, wenn sie noch nicht existiert.\n"
#~ "\t\tkubectl apply set-last-applied -f deploy.yaml --create-"
#~ "annotation=true\n"
#~ "\t\t"

#~ msgid ""
#~ "\n"
#~ "\t\t# Shut down foo.\n"
#~ "\t\tkubectl stop replicationcontroller foo\n"
#~ "\n"
#~ "\t\t# Stop pods and services with label name=myLabel.\n"
#~ "\t\tkubectl stop pods,services -l name=myLabel\n"
#~ "\n"
#~ "\t\t# Shut down the service defined in service.json\n"
#~ "\t\tkubectl stop -f service.json\n"
#~ "\n"
#~ "\t\t# Shut down all resources in the path/to/resources directory\n"
#~ "\t\tkubectl stop -f path/to/resources"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Stoppe foo.\n"
#~ "\t\tkubectl stop replicationcontroller foo\n"
#~ "\n"
#~ "\t\t# Stoppe Pods und Services mit dem Label name=myLabel.\n"
#~ "\t\tkubectl stop pods,services -l name=myLabel\n"
#~ "\n"
#~ "\t\t# Stoppe den in service.json definierten Service\n"
#~ "\t\tkubectl stop -f service.json\n"
#~ "\n"
#~ "\t\t# Stoppe alle Resourcen im Ordner path/to/resources\n"
#~ "\t\tkubectl stop -f path/to/resources"

#~ msgid ""
#~ "\n"
#~ "\t\t# Start a single instance of nginx.\n"
#~ "\t\tkubectl run nginx --image=nginx\n"
#~ "\n"
#~ "\t\t# Start a single instance of hazelcast and let the container expose "
#~ "port 5701 .\n"
#~ "\t\tkubectl run hazelcast --image=hazelcast --port=5701\n"
#~ "\n"
#~ "\t\t# Start a single instance of hazelcast and set environment variables "
#~ "\"DNS_DOMAIN=cluster\" and \"POD_NAMESPACE=default\" in the container.\n"
#~ "\t\tkubectl run hazelcast --image=hazelcast --env=\"DNS_DOMAIN=cluster\" "
#~ "--env=\"POD_NAMESPACE=default\"\n"
#~ "\n"
#~ "\t\t# Start a replicated instance of nginx.\n"
#~ "\t\tkubectl run nginx --image=nginx --replicas=5\n"
#~ "\n"
#~ "\t\t# Dry run. Print the corresponding API objects without creating "
#~ "them.\n"
#~ "\t\tkubectl run nginx --image=nginx --dry-run\n"
#~ "\n"
#~ "\t\t# Start a single instance of nginx, but overload the spec of the "
#~ "deployment with a partial set of values parsed from JSON.\n"
#~ "\t\tkubectl run nginx --image=nginx --overrides='{ \"apiVersion\": "
#~ "\"v1\", \"spec\": { ... } }'\n"
#~ "\n"
#~ "\t\t# Start a pod of busybox and keep it in the foreground, don't restart "
#~ "it if it exits.\n"
#~ "\t\tkubectl run -i -t busybox --image=busybox --restart=Never\n"
#~ "\n"
#~ "\t\t# Start the nginx container using the default command, but use custom "
#~ "arguments (arg1 .. argN) for that command.\n"
#~ "\t\tkubectl run nginx --image=nginx -- <arg1> <arg2> ... <argN>\n"
#~ "\n"
#~ "\t\t# Start the nginx container using a different command and custom "
#~ "arguments.\n"
#~ "\t\tkubectl run nginx --image=nginx --command -- <cmd> <arg1> ... <argN>\n"
#~ "\n"
#~ "\t\t# Start the perl container to compute π to 2000 places and print it "
#~ "out.\n"
#~ "\t\tkubectl run pi --image=perl --restart=OnFailure -- perl -Mbignum=bpi -"
#~ "wle 'print bpi(2000)'\n"
#~ "\n"
#~ "\t\t# Start the cron job to compute π to 2000 places and print it out "
#~ "every 5 minutes.\n"
#~ "\t\tkubectl run pi --schedule=\"0/5 * * * ?\" --image=perl --"
#~ "restart=OnFailure -- perl -Mbignum=bpi -wle 'print bpi(2000)'"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Starte eine einzelne Instanz von nginx.\n"
#~ "\t\tkubectl run nginx --image=nginx\n"
#~ "\n"
#~ "\t\t# Starte eine einzelne Instanz von hazelcast und öffne Port 5701 auf "
#~ "dem Container.\n"
#~ "\t\tkubectl run hazelcast --image=hazelcast --port=5701\n"
#~ "\n"
#~ "\t\t# Starte eine einzelne Instanz von hazelcast und setze die Umgebungs-"
#~ "variablen \"DNS_DOMAIN=cluster\" und \"POD_NAMESPACE=default\" im "
#~ "Container.\n"
#~ "\t\tkubectl run hazelcast --image=hazelcast --env=\"DNS_DOMAIN=cluster\" "
#~ "--env=\"POD_NAMESPACE=default\"\n"
#~ "\n"
#~ "\t\t# Starte eine replizierte Instanz von nginx.\n"
#~ "\t\tkubectl run nginx --image=nginx --replicas=5\n"
#~ "\n"
#~ "\t\t# Testlauf. Zeige die zugehörigen API Objekte ohne sie zu erstellen.\n"
#~ "\t\tkubectl run nginx --image=nginx --dry-run\n"
#~ "\n"
#~ "\t\t# Starte eine einzelne Instanz von nginx, aber überlade die Spec des "
#~ "Deployments mit einer Teilmenge von JSON-Werten.\n"
#~ "\t\tkubectl run nginx --image=nginx --overrides='{ \"apiVersion\": "
#~ "\"v1\", \"spec\": { ... } }'\n"
#~ "\n"
#~ "\t\t# Starte einen busybox Pod und lass ihn im Vordergrund laufen; starte "
#~ "ihn nicht neu, wenn er existiert.\n"
#~ "\t\tkubectl run -i -t busybox --image=busybox --restart=Never\n"
#~ "\n"
#~ "\t\t# Starte einen nginx-Container mit dem Standardkommando, aber "
#~ "übergebe die Parameter (arg1 .. argN) an das Kommando.\n"
#~ "\t\tkubectl run nginx --image=nginx -- <arg1> <arg2> ... <argN>\n"
#~ "\n"
#~ "\t\t# Starte den nginx-Container mit einem anderen Kommando und "
#~ "Parametern.\n"
#~ "\t\tkubectl run nginx --image=nginx --command -- <cmd> <arg1> ... <argN>\n"
#~ "\n"
#~ "\t\t# Starte den perl-Container, um π auf 2000 Stellen zu berechnen und "
#~ "gib es aus.\n"
#~ "\t\tkubectl run pi --image=perl --restart=OnFailure -- perl -Mbignum=bpi -"
#~ "wle 'print bpi(2000)'\n"
#~ "\n"
#~ "\t\t# Starte den cron-Job, um π auf 2000 Stellen zu berechnen und gib sie "
#~ "alle 5 Minuten aus.\n"
#~ "\t\tkubectl run pi --schedule=\"0/5 * * * ?\" --image=perl --"
#~ "restart=OnFailure -- perl -Mbignum=bpi -wle 'print bpi(2000)'"

#~ msgid ""
#~ "\n"
#~ "\t\t# Update node 'foo' with a taint with key 'dedicated' and value "
#~ "'special-user' and effect 'NoSchedule'.\n"
#~ "\t\t# If a taint with that key and effect already exists, its value is "
#~ "replaced as specified.\n"
#~ "\t\tkubectl taint nodes foo dedicated=special-user:NoSchedule\n"
#~ "\n"
#~ "\t\t# Remove from node 'foo' the taint with key 'dedicated' and effect "
#~ "'NoSchedule' if one exists.\n"
#~ "\t\tkubectl taint nodes foo dedicated:NoSchedule-\n"
#~ "\n"
#~ "\t\t# Remove from node 'foo' all the taints with key 'dedicated'\n"
#~ "\t\tkubectl taint nodes foo dedicated-"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Aktualisiere Knoten 'foo' mit einem Taint mit dem Key 'dedicated', "
#~ "dem Value 'special-user' und dem Effect 'NoSchedule'.\n"
#~ "\t\t# Wenn ein Taint mit dem Key und Effect schon existiert, wird sein "
#~ "Value mit den gegebenen Werten ersetzt.\n"
#~ "\t\tkubectl taint nodes foo dedicated=special-user:NoSchedule\n"
#~ "\n"
#~ "\t\t# Entferne vom Knoten 'foo' den Taint mit dem Key 'dedicated' und dem "
#~ "Effect 'NoSchedule', wenn er existiert.\n"
#~ "\t\tkubectl taint nodes foo dedicated:NoSchedule-\n"
#~ "\n"
#~ "\t\t# Entferne vom Knoten 'foo' alle Tains mit dem Key 'dedicated'\n"
#~ "\t\tkubectl taint nodes foo dedicated-"

#~ msgid ""
#~ "\n"
#~ "\t\t# Update pod 'foo' with the label 'unhealthy' and the value 'true'.\n"
#~ "\t\tkubectl label pods foo unhealthy=true\n"
#~ "\n"
#~ "\t\t# Update pod 'foo' with the label 'status' and the value 'unhealthy', "
#~ "overwriting any existing value.\n"
#~ "\t\tkubectl label --overwrite pods foo status=unhealthy\n"
#~ "\n"
#~ "\t\t# Update all pods in the namespace\n"
#~ "\t\tkubectl label pods --all status=unhealthy\n"
#~ "\n"
#~ "\t\t# Update a pod identified by the type and name in \"pod.json\"\n"
#~ "\t\tkubectl label -f pod.json status=unhealthy\n"
#~ "\n"
#~ "\t\t# Update pod 'foo' only if the resource is unchanged from version 1.\n"
#~ "\t\tkubectl label pods foo status=unhealthy --resource-version=1\n"
#~ "\n"
#~ "\t\t# Update pod 'foo' by removing a label named 'bar' if it exists.\n"
#~ "\t\t# Does not require the --overwrite flag.\n"
#~ "\t\tkubectl label pods foo bar-"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Aktualisiere den Pod 'foo' mit dem Label 'unhealthy' und dem Value "
#~ "'true'.\n"
#~ "\t\tkubectl label pods foo unhealthy=true\n"
#~ "\n"
#~ "\t\t# Aktualisiere den Pod 'foo' mit dem Label 'status' und dem Value "
#~ "'unhealthy' und überschreibe alle bisherigen Values.\n"
#~ "\t\tkubectl label --overwrite pods foo status=unhealthy\n"
#~ "\n"
#~ "\t\t# Aktualisiere alle Pods im Namespace\n"
#~ "\t\tkubectl label pods --all status=unhealthy\n"
#~ "\n"
#~ "\t\t# Aktualisiere den Pod mit type und name aus \"pod.json\"\n"
#~ "\t\tkubectl label -f pod.json status=unhealthy\n"
#~ "\n"
#~ "\t\t# Aktualisiere den Pod 'foo', wenn die Resource sich nicht von "
#~ "version 1 unterscheidet.\n"
#~ "\t\tkubectl label pods foo status=unhealthy --resource-version=1\n"
#~ "\n"
#~ "\t\t# Aktualisiere den Pod 'foo', indem das Label 'bar' gelöscht wird, "
#~ "wenn es existiert.\n"
#~ "\t\t# Benötigt kein --overwrite flag.\n"
#~ "\t\tkubectl label pods foo bar-"

#~ msgid ""
#~ "\n"
#~ "\t\t# Update pods of frontend-v1 using new replication controller data in "
#~ "frontend-v2.json.\n"
#~ "\t\tkubectl rolling-update frontend-v1 -f frontend-v2.json\n"
#~ "\n"
#~ "\t\t# Update pods of frontend-v1 using JSON data passed into stdin.\n"
#~ "\t\tcat frontend-v2.json | kubectl rolling-update frontend-v1 -f -\n"
#~ "\n"
#~ "\t\t# Update the pods of frontend-v1 to frontend-v2 by just changing the "
#~ "image, and switching the\n"
#~ "\t\t# name of the replication controller.\n"
#~ "\t\tkubectl rolling-update frontend-v1 frontend-v2 --image=image:v2\n"
#~ "\n"
#~ "\t\t# Update the pods of frontend by just changing the image, and keeping "
#~ "the old name.\n"
#~ "\t\tkubectl rolling-update frontend --image=image:v2\n"
#~ "\n"
#~ "\t\t# Abort and reverse an existing rollout in progress (from frontend-v1 "
#~ "to frontend-v2).\n"
#~ "\t\tkubectl rolling-update frontend-v1 frontend-v2 --rollback"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Aktualisiere die Pods in frontend-v1 mit den neuen Replication-"
#~ "Controller Daten in frontend-v2.json.\n"
#~ "\t\tkubectl rolling-update frontend-v1 -f frontend-v2.json\n"
#~ "\n"
#~ "\t\t# Aktualisiere die Pods in frontend-v1 mit den JSON-Daten von stdin.\n"
#~ "\t\tcat frontend-v2.json | kubectl rolling-update frontend-v1 -f -\n"
#~ "\n"
#~ "\t\t# Aktualisiere die Pods von frontend-v1 auf frontend-v2, indem das "
#~ "Image geändert wird und\n"
#~ "\t\t# der Name des ReplicationControllers.\n"
#~ "\t\tkubectl rolling-update frontend-v1 frontend-v2 --image=image:v2\n"
#~ "\n"
#~ "\t\t# Aktualisiere die Pods in frontend, indem das Image geändert, aber "
#~ "der alte Name beibehalten wird.\n"
#~ "\t\tkubectl rolling-update frontend --image=image:v2\n"
#~ "\n"
#~ "\t\t# Breche ein laufendes Rollout (von frontend-v1 zu frontend-v2) ab "
#~ "und mache es rückgängig.\n"
#~ "\t\tkubectl rolling-update frontend-v1 frontend-v2 --rollback"

#~ msgid ""
#~ "\n"
#~ "\t\t# View the last-applied-configuration annotations by type/name in "
#~ "YAML.\n"
#~ "\t\tkubectl apply view-last-applied deployment/nginx\n"
#~ "\n"
#~ "\t\t# View the last-applied-configuration annotations by file in JSON\n"
#~ "\t\tkubectl apply view-last-applied -f deploy.yaml -o json"
#~ msgstr ""
#~ "\n"
#~ "\t\t# Zeige die Annotation Last-Applied-Configuration mit type/name in "
#~ "YAML an.\n"
#~ "\t\tkubectl apply view-last-applied deployment/nginx\n"
#~ "\n"
#~ "\t\t# Zeige die Annotation Last-applied-configuration mit der Datei in "
#~ "JSON an\n"
#~ "\t\tkubectl apply view-last-applied -f deploy.yaml -o json"

#~ msgid ""
#~ "\n"
#~ "\t\tApply a configuration to a resource by filename or stdin.\n"
#~ "\t\tThis resource will be created if it doesn't exist yet.\n"
#~ "\t\tTo use 'apply', always create the resource initially with either "
#~ "'apply' or 'create --save-config'.\n"
#~ "\n"
#~ "\t\tJSON and YAML formats are accepted.\n"
#~ "\n"
#~ "\t\tAlpha Disclaimer: the --prune functionality is not yet complete. Do "
#~ "not use unless you are aware of what the current state is. See https://"
#~ "issues.k8s.io/34274."
#~ msgstr ""
#~ "\n"
#~ "\t\tWende eine Konfiguration auf eine Resource mit Dateinamen oder stdin "
#~ "an.\n"
#~ "\t\tDie Resource wird erstellt, wenn sie noch nicht existiert.\n"
#~ "\t\tUm 'apply' zu benutzen, muss die Resource initital mit 'apply' oder "
#~ "'create --save-config' erstellt werden.\n"
#~ "\n"
#~ "\t\tJSON- und YAML-Formate werden akzeptiert.\n"
#~ "\n"
#~ "\t\tAlpha Disclaimer: Die --prune Funktion ist noch nicht fertig. Benutze "
#~ "sie nicht, wenn der aktuelle Zustand nicht bekannt ist. Siehe https://"
#~ "issues.k8s.io/34274."

#~ msgid ""
#~ "\n"
#~ "\t\tCreate a ClusterRole."
#~ msgstr ""
#~ "\n"
#~ "\t\tErstelle eine ClusterRole."

#~ msgid ""
#~ "\n"
#~ "\t\tCreate a ClusterRoleBinding for a particular ClusterRole."
#~ msgstr ""
#~ "\n"
#~ "\t\tErstelle ein ClusterRoleBinding für eine bestimmte ClusterRole."

#~ msgid ""
#~ "\n"
#~ "\t\tCreate a RoleBinding for a particular Role or ClusterRole."
#~ msgstr ""
#~ "\n"
#~ "\t\tErstelle ein RoleBinding für eine bestimmte ClusterRole."

#~ msgid ""
#~ "\n"
#~ "\t\tCreate a TLS secret from the given public/private key pair.\n"
#~ "\n"
#~ "\t\tThe public/private key pair must exist before hand. The public key "
#~ "certificate must be .PEM encoded and match the given private key."
#~ msgstr ""
#~ "\n"
#~ "\t\tErstelle ein TLS-Secret vom gegebenen Public/Private-Schlüsselpaar.\n"
#~ "\n"
#~ "\t\tDas Public/Private-Schlüsselpaar muss vorab bestehen. Das Public-Key-"
#~ "Zertifikat muss im PEM-Format sein und zum gegebenen Private-Key passen."

#~ msgid ""
#~ "\n"
#~ "\t\tCreate a configmap based on a file, directory, or specified literal "
#~ "value.\n"
#~ "\n"
#~ "\t\tA single configmap may package one or more key/value pairs.\n"
#~ "\n"
#~ "\t\tWhen creating a configmap based on a file, the key will default to "
#~ "the basename of the file, and the value will\n"
#~ "\t\tdefault to the file content.  If the basename is an invalid key, you "
#~ "may specify an alternate key.\n"
#~ "\n"
#~ "\t\tWhen creating a configmap based on a directory, each file whose "
#~ "basename is a valid key in the directory will be\n"
#~ "\t\tpackaged into the configmap.  Any directory entries except regular "
#~ "files are ignored (e.g. subdirectories,\n"
#~ "\t\tsymlinks, devices, pipes, etc)."
#~ msgstr ""
#~ "\n"
#~ "\t\tErstelle eine ConfigMap basierend auf einer Datei, einem Order oder "
#~ "einem gegebenen Wert.\n"
#~ "\n"
#~ "\t\tEine einzelne ConfigMap kann eins oder mehr Key/Value-Paare "
#~ "beinhalten.\n"
#~ "\n"
#~ "\t\tWenn man eine ConfigMap von einer Datei erstellt, wird der Key "
#~ "standardmäßig der Name der Datei, und der Wert wird\n"
#~ "\t\tstandardmäßig der Dateiinhalt. Wenn der Dateiname ein ungültiger Key "
#~ "ist, kann ein anderer Key angegeben werden.\n"
#~ "\n"
#~ "\t\tWenn man eine ConfigMap von einem Ordner erstellt, wird jede Datei, "
#~ "deren Name ein gültiger Key ist\n"
#~ "\t\tin die ConfigMap aufgenommen. Jegliche Einträge im Ordner, die keine "
#~ "regulären Dateien sind, werden ignoriert (z.B. SubDirectories, \n"
#~ "\t\tSymLinks, Devices, Pipes, usw)."

#~ msgid ""
#~ "\n"
#~ "\t\tCreate a new secret for use with Docker registries.\n"
#~ "\n"
#~ "\t\tDockercfg secrets are used to authenticate against Docker "
#~ "registries.\n"
#~ "\n"
#~ "\t\tWhen using the Docker command line to push images, you can "
#~ "authenticate to a given registry by running\n"
#~ "\n"
#~ "\t\t    $ docker login DOCKER_REGISTRY_SERVER --username=DOCKER_USER --"
#~ "password=DOCKER_PASSWORD --email=DOCKER_EMAIL'.\n"
#~ "\n"
#~ "    That produces a ~/.dockercfg file that is used by subsequent 'docker "
#~ "push' and 'docker pull' commands to\n"
#~ "\t\tauthenticate to the registry. The email address is optional.\n"
#~ "\n"
#~ "\t\tWhen creating applications, you may have a Docker registry that "
#~ "requires authentication.  In order for the\n"
#~ "\t\tnodes to pull images on your behalf, they have to have the "
#~ "credentials.  You can provide this information\n"
#~ "\t\tby creating a dockercfg secret and attaching it to your service "
#~ "account."
#~ msgstr ""
#~ "\n"
#~ "\t\tErstelle ein Secret für die Benutzung mit Docker-Registries.\n"
#~ "\n"
#~ "\t\tDockercfg Secrets werden für die Authentifizierung bei Docker-"
#~ "Registries benutzt.\n"
#~ "\n"
#~ "\t\tWenn die Docker-command -line zum pushen von Images benutzt wird, "
#~ "kann man sich bei einer gegebenen Registry authentifizieren mit\n"
#~ "\n"
#~ "\t\t    $ docker login DOCKER_REGISTRY_SERVER --username=DOCKER_USER --"
#~ "password=DOCKER_PASSWORD --email=DOCKER_EMAIL'.\n"
#~ "\n"
#~ "    Dies produziert eine ~/.dockercfg Datei, die für folgende 'docker "
#~ "push' und 'docker pull' Befehle genutzt wird,\n"
#~ "\t\tum sich an der Registry zu authentifizieren. Die E-Mail-Adresse ist "
#~ "optional.\n"
#~ "\n"
#~ "\t\tBei der Erstellung von Applikationen, kann eine Docker-Registry eine "
#~ "Authentifizierung verlangen. Damit\n"
#~ "\t\tdeine Knoten in deinem Namen Images herunterladen können, benötigen "
#~ "sie die Credentials.  Man kann diese Information bereitstellen\n"
#~ "\t\tindem man ein dockercfg secret erstellt und zu seinem ServiceAccount "
#~ "hinzufügt."

#~ msgid ""
#~ "\n"
#~ "\t\tCreate a pod disruption budget with the specified name, selector, and "
#~ "desired minimum available pods"
#~ msgstr ""
#~ "\n"
#~ "\t\tErstelle ein Pod-Disruption-Budget mit dem gegebenen name, selector "
#~ "und der gewünschten Mindestanzahl verfügbarer Pods"

#~ msgid ""
#~ "\n"
#~ "\t\tCreate a resource by filename or stdin.\n"
#~ "\n"
#~ "\t\tJSON and YAML formats are accepted."
#~ msgstr ""
#~ "\n"
#~ "\t\tErstelle eine Resource mit Dateinamen oder stdin.\n"
#~ "\n"
#~ "\t\tJSON- und YAML-Formate werden akzeptiert."

#~ msgid ""
#~ "\n"
#~ "\t\tCreate a resourcequota with the specified name, hard limits and "
#~ "optional scopes"
#~ msgstr ""
#~ "\n"
#~ "\t\tErstelle eine ResourceQuota mit dem gegebenen name, hard limits und "
#~ "optional scopes"

#~ msgid ""
#~ "\n"
#~ "\t\tCreate a secret based on a file, directory, or specified literal "
#~ "value.\n"
#~ "\n"
#~ "\t\tA single secret may package one or more key/value pairs.\n"
#~ "\n"
#~ "\t\tWhen creating a secret based on a file, the key will default to the "
#~ "basename of the file, and the value will\n"
#~ "\t\tdefault to the file content.  If the basename is an invalid key, you "
#~ "may specify an alternate key.\n"
#~ "\n"
#~ "\t\tWhen creating a secret based on a directory, each file whose basename "
#~ "is a valid key in the directory will be\n"
#~ "\t\tpackaged into the secret.  Any directory entries except regular files "
#~ "are ignored (e.g. subdirectories,\n"
#~ "\t\tsymlinks, devices, pipes, etc)."
#~ msgstr ""
#~ "\n"
#~ "\t\tErstelle ein Secret basierend auf einer Datei, einem Ordner oder "
#~ "einem gegebenen Wert.\n"
#~ "\n"
#~ "\t\tEin einzelnes Secret kann eins oder mehr Key/Value-Paare beinhalten.\n"
#~ "\n"
#~ "\t\tWenn man ein Secret von einer Datei erstellt, wird der Key "
#~ "standardmäßig der Name der Datei, und der Wert wird\n"
#~ "\t\tstandardmäßig der Dateiinhalt. Wenn der Dateiname ein ungültiger Key "
#~ "ist, kann ein anderer Key angegeben werden.\n"
#~ "\n"
#~ "\t\tWenn man ein Secret von einem Ordner erstellt, wird jede Datei, deren "
#~ "Name ein gültiger Key ist\n"
#~ "\t\tin das Secret aufgenommen. Jegliche Einträge im Ordner, die keine "
#~ "regulären Dateien sind, werden ignoriert (z.B. SubDirectories, \n"
#~ "\t\tSymLinks, Devices, Pipes, usw)."

#~ msgid ""
#~ "\n"
#~ "\t\tCreate and run a particular image, possibly replicated.\n"
#~ "\n"
#~ "\t\tCreates a deployment or job to manage the created container(s)."
#~ msgstr ""
#~ "\n"
#~ "\t\tErstelle und starte ein bestimmtes Image, möglicherweise repliziert.\n"
#~ "\n"
#~ "\t\tErstellt ein Deployment oder Job, um den/die erstellten Container zu "
#~ "verwalten."

#~ msgid ""
#~ "\n"
#~ "\t\tCreates an autoscaler that automatically chooses and sets the number "
#~ "of pods that run in a kubernetes cluster.\n"
#~ "\n"
#~ "\t\tLooks up a Deployment, ReplicaSet, or ReplicationController by name "
#~ "and creates an autoscaler that uses the given resource as a reference.\n"
#~ "\t\tAn autoscaler can automatically increase or decrease number of pods "
#~ "deployed within the system as needed."
#~ msgstr ""
#~ "\n"
#~ "\t\tErstellt einen AutoScaler der die Anzahl der Pods, die im Kubernetes-"
#~ "Cluster laufen, automatisch wählt und anpasst.\n"
#~ "\n"
#~ "\t\tSucht ein Deployment, ReplicaSet oder ReplicationController mit Namen "
#~ "name und erstellt einen AutoScaler, der die Resource als Referenz nimmt.\n"
#~ "\t\tEin AutoScaler kann die Anzahl der im System deployten Pods nach "
#~ "Bedarf erhöhen oder verringern."

#~ msgid ""
#~ "\n"
#~ "\t\tDelete resources by filenames, stdin, resources and names, or by "
#~ "resources and label selector.\n"
#~ "\n"
#~ "\t\tJSON and YAML formats are accepted. Only one type of the arguments "
#~ "may be specified: filenames,\n"
#~ "\t\tresources and names, or resources and label selector.\n"
#~ "\n"
#~ "\t\tSome resources, such as pods, support graceful deletion. These "
#~ "resources define a default period\n"
#~ "\t\tbefore they are forcibly terminated (the grace period) but you may "
#~ "override that value with\n"
#~ "\t\tthe --grace-period flag, or pass --now to set a grace-period of 1. "
#~ "Because these resources often\n"
#~ "\t\trepresent entities in the cluster, deletion may not be acknowledged "
#~ "immediately. If the node\n"
#~ "\t\thosting a pod is down or cannot reach the API server, termination may "
#~ "take significantly longer\n"
#~ "\t\tthan the grace period. To force delete a resource,\tyou must pass a "
#~ "grace\tperiod of 0 and specify\n"
#~ "\t\tthe --force flag.\n"
#~ "\n"
#~ "\t\tIMPORTANT: Force deleting pods does not wait for confirmation that "
#~ "the pod's processes have been\n"
#~ "\t\tterminated, which can leave those processes running until the node "
#~ "detects the deletion and\n"
#~ "\t\tcompletes graceful deletion. If your processes use shared storage or "
#~ "talk to a remote API and\n"
#~ "\t\tdepend on the name of the pod to identify themselves, force deleting "
#~ "those pods may result in\n"
#~ "\t\tmultiple processes running on different machines using the same "
#~ "identification which may lead\n"
#~ "\t\tto data corruption or inconsistency. Only force delete pods when you "
#~ "are sure the pod is\n"
#~ "\t\tterminated, or if your application can tolerate multiple copies of "
#~ "the same pod running at once.\n"
#~ "\t\tAlso, if you force delete pods the scheduler may place new pods on "
#~ "those nodes before the node\n"
#~ "\t\thas released those resources and causing those pods to be evicted "
#~ "immediately.\n"
#~ "\n"
#~ "\t\tNote that the delete command does NOT do resource version checks, so "
#~ "if someone\n"
#~ "\t\tsubmits an update to a resource right when you submit a delete, their "
#~ "update\n"
#~ "\t\twill be lost along with the rest of the resource."
#~ msgstr ""
#~ "\n"
#~ "\t\tLöscht die Resourcen mit Dateinamen, stdin, resources- und names- "
#~ "oder mit resources- und label-Selektor.\n"
#~ "\n"
#~ "\t\tJSON- und YAML-Formate werden akzeptiert. Nur einer der Parameter "
#~ "darf verwendet werden: Dateiname,\n"
#~ "\t\tresources- und names-, oder resources- und label-Selektor.\n"
#~ "\n"
#~ "\t\tManche Resourcen, zum Beispiel Pods, unterstützen graziöses Löschen. "
#~ "Sie definieren einen Standardzeitraum\n"
#~ "\t\tbevor das Löschen erzwungen wird (grace-period), aber dieser Wert "
#~ "kann überschrieben werden mit\n"
#~ "\t\tder --grace-period Option, oder mit --now, das die grace-period auf 1 "
#~ "setzt. Da diese Resourcen\n"
#~ "\t\thäufig Einheiten im Cluster sind, kann das Löschen nicht immer direkt "
#~ "bestätigt werden. Wenn der Knoten\n"
#~ "\t\tauf dem der Pod läuft nicht verfügbar ist, oder den API Server nicht "
#~ "erreichen kann, kann das Löschen bedeutend länger dauern\n"
#~ "\t\tals die grace-period. Um das Löschen zu erzwingen, muss eine grace-"
#~ "period von 0 übergeben werden\n"
#~ "\t\tund die --force Option gesetzt sein.\n"
#~ "\n"
#~ "\t\tWICHTIG: Ein erzwungenes Löschen wartet nicht auf die Bestätigung, "
#~ "dass der Prozess\n"
#~ "\t\tbeendet wurde, was den Prozess am Leben erhalten kann, bis der Knoten "
#~ "die Löschung erkennt\n"
#~ "\t\tund das graziöse Löschen beendet. Wenn Prozesse Shared-Storage oder "
#~ "eine Remote-API verwenden und\n"
#~ "\t\tden Namen des Pods brauchen, um sich selbst zu identifizieren, kann "
#~ "das erzwungene Löschen dazu führen, dass\n"
#~ "\t\tmehrere Prozesse auf der gleichen Maschine die gleiche Identität "
#~ "verwenden, was zu\n"
#~ "\t\tDatenkorruption oder Inkonsistenz führen kann. Erzwinge nur ein "
#~ "Löschen, wenn sichergestellt ist, dass der Pod\n"
#~ "\t\tgelöscht ist, oder wenn die Anwendung mehrere gleichzeitig laufende "
#~ "Kopien verarbeiten kann.\n"
#~ "\t\tAußerdem kann es passieren, dass der Scheduler neue Pods auf dem "
#~ "Knoten plaziert, bevor der Knoten\n"
#~ "\t\tdie Resourcen freigegeben hat, sodass diese Pods direkt entfernt "
#~ "werden.\n"
#~ "\n"
#~ "\t\tBerücksichtige außerdem, dass der Delete-Befehl KEINE versionen "
#~ "prüft, sodass, wenn jemand\n"
#~ "\t\tein Update einer Resource gleichzeitig mit Deinem delete anstößt, "
#~ "dessen Update\n"
#~ "\t\tmit dem Rest der Resource entfernt wird."

#~ msgid ""
#~ "\n"
#~ "\t\tDeprecated: Gracefully shut down a resource by name or filename.\n"
#~ "\n"
#~ "\t\tThe stop command is deprecated, all its functionalities are covered "
#~ "by delete command.\n"
#~ "\t\tSee 'kubectl delete --help' for more details.\n"
#~ "\n"
#~ "\t\tAttempts to shut down and delete a resource that supports graceful "
#~ "termination.\n"
#~ "\t\tIf the resource is scalable it will be scaled to 0 before deletion."
#~ msgstr ""
#~ "\n"
#~ "\t\tVeraltet: Fahre eine Resource mit Namen oder Dateinamen graziös "
#~ "heruter.\n"
#~ "\n"
#~ "\t\tDer Stop-Befehl ist veraltet und alle Funktioneren werden mit dem "
#~ "Delete-Befehl abgedeckt.\n"
#~ "\t\tSiehe 'kubectl delete --help' für mehr Details.\n"
#~ "\n"
#~ "\t\tVersucht eine Resource, die graziöses Löschen unterstützt, "
#~ "herunterzufahren und zu löschen.\n"
#~ "\t\tWenn die Resource skaliert werden kann, wird sie vor dem Löschen auf "
#~ "0 skaliert."

#~ msgid ""
#~ "\n"
#~ "\t\tDisplay Resource (CPU/Memory/Storage) usage of nodes.\n"
#~ "\n"
#~ "\t\tThe top-node command allows you to see the resource consumption of "
#~ "nodes."
#~ msgstr ""
#~ "\n"
#~ "\t\tZeigt die Resourcennutzung (CPU/Memory/Storage) von Knoten.\n"
#~ "\n"
#~ "\t\tDer top-node-Befehl erlaubt es, die Resourcennutzung von Knoten zu "
#~ "betrachten."

#~ msgid ""
#~ "\n"
#~ "\t\tDisplay Resource (CPU/Memory/Storage) usage of pods.\n"
#~ "\n"
#~ "\t\tThe 'top pod' command allows you to see the resource consumption of "
#~ "pods.\n"
#~ "\n"
#~ "\t\tDue to the metrics pipeline delay, they may be unavailable for a few "
#~ "minutes\n"
#~ "\t\tsince pod creation."
#~ msgstr ""
#~ "\n"
#~ "\t\tZeigt die Resourcennutzung (CPU/Memory/Storage) von Pods.\n"
#~ "\n"
#~ "\t\tDer 'top pod'-Befehl erlaubt es, die Resourcennutzung von Pods zu "
#~ "betrachten.\n"
#~ "\n"
#~ "\t\tAufgrund der Metrik-Pipeline-Verzögerung, können sie für ein paar "
#~ "Minuten nicht verfügbar sein,\n"
#~ "\t\tnach der Pod-Erstellung."

#~ msgid ""
#~ "\n"
#~ "\t\tDisplay Resource (CPU/Memory/Storage) usage.\n"
#~ "\n"
#~ "\t\tThe top command allows you to see the resource consumption for nodes "
#~ "or pods.\n"
#~ "\n"
#~ "\t\tThis command requires Heapster to be correctly configured and working "
#~ "on the server. "
#~ msgstr ""
#~ "\n"
#~ "\t\tZeige Resourcennutzung (CPU/Memory/Storage).\n"
#~ "\n"
#~ "\t\tDer top-Befehl erlaubt es, die Resourcennutzung von Knoten oder Pods "
#~ "zu betrachten.\n"
#~ "\n"
#~ "\t\tDieser Befehl benötigt eine korrekt konfigurierte und funktionierende "
#~ "Heapster-Installation auf dem Server. "

#~ msgid ""
#~ "\n"
#~ "\t\tDrain node in preparation for maintenance.\n"
#~ "\n"
#~ "\t\tThe given node will be marked unschedulable to prevent new pods from "
#~ "arriving.\n"
#~ "\t\t'drain' evicts the pods if the APIServer supports eviction\n"
#~ "\t\t(http://kubernetes.io/docs/admin/disruptions/). Otherwise, it will "
#~ "use normal DELETE\n"
#~ "\t\tto delete the pods.\n"
#~ "\t\tThe 'drain' evicts or deletes all pods except mirror pods (which "
#~ "cannot be deleted through\n"
#~ "\t\tthe API server).  If there are DaemonSet-managed pods, drain will not "
#~ "proceed\n"
#~ "\t\twithout --ignore-daemonsets, and regardless it will not delete any\n"
#~ "\t\tDaemonSet-managed pods, because those pods would be immediately "
#~ "replaced by the\n"
#~ "\t\tDaemonSet controller, which ignores unschedulable markings.  If there "
#~ "are any\n"
#~ "\t\tpods that are neither mirror pods nor managed by "
#~ "ReplicationController,\n"
#~ "\t\tReplicaSet, DaemonSet, StatefulSet or Job, then drain will not delete "
#~ "any pods unless you\n"
#~ "\t\tuse --force.  --force will also allow deletion to proceed if the "
#~ "managing resource of one\n"
#~ "\t\tor more pods is missing.\n"
#~ "\n"
#~ "\t\t'drain' waits for graceful termination. You should not operate on the "
#~ "machine until\n"
#~ "\t\tthe command completes.\n"
#~ "\n"
#~ "\t\tWhen you are ready to put the node back into service, use kubectl "
#~ "uncordon, which\n"
#~ "\t\twill make the node schedulable again.\n"
#~ "\n"
#~ "\t\t![Workflow](http://kubernetes.io/images/docs/kubectl_drain.svg)"
#~ msgstr ""
#~ "\n"
#~ "\t\tLeere Knoten, um eine Wartung vorzubereiten.\n"
#~ "\n"
#~ "\t\tDer gegebene Knoten wird als unschedulable markiert, um die Zuordnung "
#~ "von neuen Pods zu verhindern.\n"
#~ "\t\t'drain' entfernt den Pod, falls der API-Server die Entfernung "
#~ "unterstützt\n"
#~ "\t\t(http://kubernetes.io/docs/admin/disruptions/). Wenn nicht, wird ein "
#~ "normales DELETE verwendet,\n"
#~ "\t\tum die Pods zu löschen.\n"
#~ "\t\t'drain' entfernt oder löscht alle Pods mit der Ausnahme von Mirror-"
#~ "Pods (welche vom API Server nicht gelöscht werden können)\n"
#~ "\t\tWenn DaemonSet-verwaltete Pods existieren, wird 'drain' nicht "
#~ "fortgesetzt\n"
#~ "\t\tohne die --ignore-daemonsets Option, und es wird in keinem Fall\n"
#~ "\t\tDaemonSet-verwaltete Pods löschen, weil diese Pods direkt ersetzt "
#~ "würden durch den\n"
#~ "\t\tDaemonSet-Controller, der unschedulable Markierungen ignoriert.  Wenn "
#~ "es irgendwelche\n"
#~ "\t\tPods gibt, die weder Mirror-Pods sind, noch von einem "
#~ "ReplicationController,\n"
#~ "\t\tReplicaSet, DaemonSet, StatefulSet oder Job verwaltet werden, wird "
#~ "drain keine Pods löschen, außer die\n"
#~ "\t\t--force Option ist gesetzt.  --force lässt das Löschen selbst zu, "
#~ "wenn die verwaltende Resource von einem\n"
#~ "\t\toder mehreren Pods fehlt.\n"
#~ "\n"
#~ "\t\t'drain' wartet auf eine graziöse Löschung. Man sollte auf der "
#~ "Maschine nichts tun, während\n"
#~ "\t\tder Befehl läuft.\n"
#~ "\n"
#~ "\t\tWenn der Knoten wieder bereit ist die Arbeit aufzunehmen, benutze "
#~ "kubectl uncordon,\n"
#~ "\t\twas den Knoten als schedulable markiert.\n"
#~ "\n"
#~ "\t\t![Workflow](http://kubernetes.io/images/docs/kubectl_drain.svg)"

#~ msgid ""
#~ "\n"
#~ "\t\tEdit a resource from the default editor.\n"
#~ "\n"
#~ "\t\tThe edit command allows you to directly edit any API resource you can "
#~ "retrieve via the\n"
#~ "\t\tcommand line tools. It will open the editor defined by your "
#~ "KUBE_EDITOR, or EDITOR\n"
#~ "\t\tenvironment variables, or fall back to 'vi' for Linux or 'notepad' "
#~ "for Windows.\n"
#~ "\t\tYou can edit multiple objects, although changes are applied one at a "
#~ "time. The command\n"
#~ "\t\taccepts filenames as well as command line arguments, although the "
#~ "files you point to must\n"
#~ "\t\tbe previously saved versions of resources.\n"
#~ "\n"
#~ "\t\tEditing is done with the API version used to fetch the resource.\n"
#~ "\t\tTo edit using a specific API version, fully-qualify the resource, "
#~ "version, and group.\n"
#~ "\n"
#~ "\t\tThe default format is YAML. To edit in JSON, specify \"-o json\".\n"
#~ "\n"
#~ "\t\tThe flag --windows-line-endings can be used to force Windows line "
#~ "endings,\n"
#~ "\t\totherwise the default for your operating system will be used.\n"
#~ "\n"
#~ "\t\tIn the event an error occurs while updating, a temporary file will be "
#~ "created on disk\n"
#~ "\t\tthat contains your unapplied changes. The most common error when "
#~ "updating a resource\n"
#~ "\t\tis another editor changing the resource on the server. When this "
#~ "occurs, you will have\n"
#~ "\t\tto apply your changes to the newer version of the resource, or update "
#~ "your temporary\n"
#~ "\t\tsaved copy to include the latest resource version."
#~ msgstr ""
#~ "\n"
#~ "\t\tBearbeite eine Resource mit dem Standardeditor.\n"
#~ "\n"
#~ "\t\tDer edit-Befehl erlaubt es jede API Resource direkt zu bearbeiten, "
#~ "wenn sie mit den\n"
#~ "\t\tCommand-Line-Tools erreichbar ist. Er öffnet den Editor, der in der "
#~ "KUBE_EDITOR oder EDITOR\n"
#~ "\t\tUmgebunsvariable festgelegt ist, oder 'vi' auf Linux und 'notepad' "
#~ "auf Windows.\n"
#~ "\t\tEs ist möglich mehrere Objekte zu bearbeiten, aber die Änderungen "
#~ "werden nacheinander angewendet. Der Befehl\n"
#~ "\t\takzeptiert Dateinamen und Command-Line-Parameter, aber die "
#~ "verwendeten Dateien müssen\n"
#~ "\t\tvorab gespeicherte Versionen von Resourcen sein.\n"
#~ "\n"
#~ "\t\tDie Bearbeitung verwendet die API Version, die genutzt wurde, um die "
#~ "Resource zu lesen.\n"
#~ "\t\tUm eine spezifische API Version zu verwenden, muss die vollständige "
#~ "Resource, Version und Group angegeben werden.\n"
#~ "\n"
#~ "\t\tDas Standardformat ist YAML. Um mit JSON zu arbeiten, setze \"-o json"
#~ "\".\n"
#~ "\n"
#~ "\t\tDie Option --windows-line-endings kann benutzt werden, um Windows "
#~ "Zeilen-umbrüche zu verwenden,\n"
#~ "\t\tansonsten wird der Standard des Betriebssystems verwendet.\n"
#~ "\n"
#~ "\t\tFalls beim Update ein Fehler auftritt, wird eine temporäre Datei auf "
#~ "der Festplatte angelegt,\n"
#~ "\t\tdie die nicht verarbeiteten Änderungen enthält. Der häufigste Fehler "
#~ "beim Bearbeiten einer Resource\n"
#~ "\t\tist ein anderer Editor, der die Resource auf dem Server ändert. Wenn "
#~ "das auftritt, muss man\n"
#~ "\t\tseine Änderungen auf die neue Version anwenden oder seine temporäre\n"
#~ "\t\tgespeicherte Kopie mit der neuesten Resourcenversion aktualisieren."

#~ msgid ""
#~ "\n"
#~ "\t\tOutput shell completion code for the specified shell (bash or zsh).\n"
#~ "\t\tThe shell code must be evaluated to provide interactive\n"
#~ "\t\tcompletion of kubectl commands.  This can be done by sourcing it "
#~ "from\n"
#~ "\t\tthe .bash_profile.\n"
#~ "\n"
#~ "\t\tNote: this requires the bash-completion framework, which is not "
#~ "installed\n"
#~ "\t\tby default on Mac.  This can be installed by using homebrew:\n"
#~ "\n"
#~ "\t\t    $ brew install bash-completion\n"
#~ "\n"
#~ "\t\tOnce installed, bash_completion must be evaluated.  This can be done "
#~ "by adding the\n"
#~ "\t\tfollowing line to the .bash_profile\n"
#~ "\n"
#~ "\t\t    $ source $(brew --prefix)/etc/bash_completion\n"
#~ "\n"
#~ "\t\tNote for zsh users: [1] zsh completions are only supported in "
#~ "versions of zsh >= 5.2"
#~ msgstr ""
#~ "\n"
#~ "\t\tGibt den Shell-Completion-Code für die angegebene Shell aus (bash "
#~ "oder zsh).\n"
#~ "\t\tDer Shell-Code muss für eine interaktive Vervollständigung von "
#~ "kubectl \n"
#~ "\t\tausgewertet werden. Das ist möglich, indem man\n"
#~ "\t\tdie .bash_profile Datei sourcet.\n"
#~ "\n"
#~ "\t\tHinweis: Dies setzt das Bash-Completion-Framework voraus, das auf dem "
#~ "Mac nicht standardmäßig installiert ist. \n"
#~ "\t\tEs kann mit homebrew installiert werden:\n"
#~ "\n"
#~ "\t\t    $ brew install bash-completion\n"
#~ "\n"
#~ "\t\tSobald es installiert ist, muss bash_completion ausgewertet werden. "
#~ "Dies wird erreicht, indem man\n"
#~ "\t\tdie folgende Zeile zur .bash_profile-Datei hinzufügt\n"
#~ "\n"
#~ "\t\t    $ source $(brew --prefix)/etc/bash_completion\n"
#~ "\n"
#~ "\t\tHinweis für zsh Nutzer: [1] zsh completions werden nur in Versionen "
#~ "von zsh >= 5.2 unterstützt"

#~ msgid ""
#~ "\n"
#~ "\t\tPerform a rolling update of the given ReplicationController.\n"
#~ "\n"
#~ "\t\tReplaces the specified replication controller with a new replication "
#~ "controller by updating one pod at a time to use the\n"
#~ "\t\tnew PodTemplate. The new-controller.json must specify the same "
#~ "namespace as the\n"
#~ "\t\texisting replication controller and overwrite at least one (common) "
#~ "label in its replicaSelector.\n"
#~ "\n"
#~ "\t\t![Workflow](http://kubernetes.io/images/docs/kubectl_rollingupdate."
#~ "svg)"
#~ msgstr ""
#~ "\n"
#~ "\t\tFühre ein Rolling-Update des gegebenen ReplicationControllers aus.\n"
#~ "\n"
#~ "\t\tErsetzt den gegebenen ReplicationController mit einem neuen "
#~ "Replication-Controller, indem die neue PodTampleta Pod für Pod\n"
#~ "\t\tangewendet wird. Die new-controller.json muss den gleichen Namespace "
#~ "wie\n"
#~ "\t\tder aktuelle ReplicationController besitzen und mindestens ein "
#~ "gemeinsames Label im ReplicaSelector überschreiben.\n"
#~ "\n"
#~ "\t\t![Workflow](http://kubernetes.io/images/docs/kubectl_rollingupdate."
#~ "svg)"

#~ msgid ""
#~ "\n"
#~ "\t\tReplace a resource by filename or stdin.\n"
#~ "\n"
#~ "\t\tJSON and YAML formats are accepted. If replacing an existing "
#~ "resource, the\n"
#~ "\t\tcomplete resource spec must be provided. This can be obtained by\n"
#~ "\n"
#~ "\t\t    $ kubectl get TYPE NAME -o yaml\n"
#~ "\n"
#~ "\t\tPlease refer to the models in https://htmlpreview.github.io/?https://"
#~ "github.com/kubernetes/kubernetes/blob/HEAD/docs/api-reference/v1/"
#~ "definitions.html to find if a field is mutable."
#~ msgstr ""
#~ "\n"
#~ "\t\tErsetze eine Resource mit Dateinamen oder stdin.\n"
#~ "\n"
#~ "\t\tJSON- and YAML-Formate werden akzeptiert. Wenn eine existierende "
#~ "Resource ersetzt wird,\n"
#~ "\t\tmuss die vollständige spSpecec mitgegeben werden. Diese kann hiermit "
#~ "ausgelesen werden\n"
#~ "\n"
#~ "\t\t    $ kubectl get TYPE NAME -o yaml\n"
#~ "\n"
#~ "\t\tBitte konsultiere https://htmlpreview.github.io/?https://github.com/"
#~ "kubernetes/kubernetes/blob/HEAD/docs/api-reference/v1/definitions.html um "
#~ "zu erfahren, ob ein Feld verändert werden darf."

#~ msgid ""
#~ "\n"
#~ "\t\tSet a new size for a Deployment, ReplicaSet, Replication Controller, "
#~ "or Job.\n"
#~ "\n"
#~ "\t\tScale also allows users to specify one or more preconditions for the "
#~ "scale action.\n"
#~ "\n"
#~ "\t\tIf --current-replicas or --resource-version is specified, it is "
#~ "validated before the\n"
#~ "\t\tscale is attempted, and it is guaranteed that the precondition holds "
#~ "true when the\n"
#~ "\t\tscale is sent to the server."
#~ msgstr ""
#~ "\n"
#~ "\t\tSetze eine neue Größe für ein Deployment, ReplicaSet, Replication-"
#~ "Contoller oder Job.\n"
#~ "\n"
#~ "\t\tScale erlaubt es Nutzern eine oder mehr Voraussetzungen für die "
#~ "Aktion festzulegen.\n"
#~ "\n"
#~ "\t\tWenn --current-replicas oder --resource-version gegeben ist, wird es "
#~ "validiert, bevor\n"
#~ "\t\tscale versucht wird, und es wird garantiert, dass die Voraussetzungen "
#~ "erfüllt sind, wenn\n"
#~ "\t\tscale zum Server geschickt wird."

#~ msgid ""
#~ "\n"
#~ "\t\tTo proxy all of the kubernetes api and nothing else, use:\n"
#~ "\n"
#~ "\t\t    $ kubectl proxy --api-prefix=/\n"
#~ "\n"
#~ "\t\tTo proxy only part of the kubernetes api and also some static files:\n"
#~ "\n"
#~ "\t\t    $ kubectl proxy --www=/my/files --www-prefix=/static/ --api-"
#~ "prefix=/api/\n"
#~ "\n"
#~ "\t\tThe above lets you 'curl localhost:8001/api/v1/pods'.\n"
#~ "\n"
#~ "\t\tTo proxy the entire kubernetes api at a different root, use:\n"
#~ "\n"
#~ "\t\t    $ kubectl proxy --api-prefix=/custom/\n"
#~ "\n"
#~ "\t\tThe above lets you 'curl localhost:8001/custom/api/v1/pods'"
#~ msgstr ""
#~ "\n"
#~ "\t\tProxy alle Teile der Kubernetes-API und sonst nichts:\n"
#~ "\n"
#~ "\t\t    $ kubectl proxy --api-prefix=/\n"
#~ "\n"
#~ "\t\tProxy nur bestimmte Teile der Kubernetes-API und einige statische "
#~ "Dateien:\n"
#~ "\n"
#~ "\t\t    $ kubectl proxy --www=/my/files --www-prefix=/static/ --api-"
#~ "prefix=/api/\n"
#~ "\n"
#~ "\t\tDer Befehl oben lässt dich 'curl localhost:8001/api/v1/pods' "
#~ "aufrufen.\n"
#~ "\n"
#~ "\t\tProxy alle Teile der Kubernetes-API auf einem anderen root:\n"
#~ "\n"
#~ "\t\t    $ kubectl proxy --api-prefix=/custom/\n"
#~ "\n"
#~ "\t\tDer Befehl oben lässt dich 'curl localhost:8001/custom/api/v1/pods' "
#~ "aufrufen"

#~ msgid ""
#~ "\n"
#~ "\t\tUpdate field(s) of a resource using strategic merge patch\n"
#~ "\n"
#~ "\t\tJSON and YAML formats are accepted.\n"
#~ "\n"
#~ "\t\tPlease refer to the models in https://htmlpreview.github.io/?https://"
#~ "github.com/kubernetes/kubernetes/blob/HEAD/docs/api-reference/v1/"
#~ "definitions.html to find if a field is mutable."
#~ msgstr ""
#~ "\n"
#~ "\t\tAktualisiere Felder einer Resource mit einem Strategic-Merge-Patch\n"
#~ "\n"
#~ "\t\tJSON- und YAML-Formate werden akzeptiert.\n"
#~ "\n"
#~ "\t\tBitte konsultiere https://htmlpreview.github.io/?https://github.com/"
#~ "kubernetes/kubernetes/blob/HEAD/docs/api-reference/v1/definitions.html um "
#~ "zu erfahren, ob ein Feld mutable ist."

#~ msgid ""
#~ "\n"
#~ "\t  # Create a new TLS secret named tls-secret with the given key pair:\n"
#~ "\t  kubectl create secret tls tls-secret --cert=path/to/tls.cert --"
#~ "key=path/to/tls.key"
#~ msgstr ""
#~ "\n"
#~ "\t  # Erstelle ein neues TLS Secret tl-secret mit dem gegebenen "
#~ "Schlüsselpaar:\n"
#~ "\t  kubectl create secret tls tls-secret --cert=path/to/tls.cert --"
#~ "key=path/to/tls.key"

#~ msgid ""
#~ "\n"
#~ "\t  # Create a new secret named my-secret with keys for each file in "
#~ "folder bar\n"
#~ "\t  kubectl create secret generic my-secret --from-file=path/to/bar\n"
#~ "\n"
#~ "\t  # Create a new secret named my-secret with specified keys instead of "
#~ "names on disk\n"
#~ "\t  kubectl create secret generic my-secret --from-file=ssh-privatekey=~/."
#~ "ssh/id_rsa --from-file=ssh-publickey=~/.ssh/id_rsa.pub\n"
#~ "\n"
#~ "\t  # Create a new secret named my-secret with key1=supersecret and "
#~ "key2=topsecret\n"
#~ "\t  kubectl create secret generic my-secret --from-"
#~ "literal=key1=supersecret --from-literal=key2=topsecret"
#~ msgstr ""
#~ "\n"
#~ "\t  # Erstelle ein neues Secret my-secret mit einem Key für jede Datei im "
#~ "Ordner bar\n"
#~ "\t  kubectl create secret generic my-secret --from-file=path/to/bar\n"
#~ "\n"
#~ "\t  # Erstelle ein neues Secret my-secret mit den gegebenen Keys statt "
#~ "der Namen auf der Festplatte\n"
#~ "\t  kubectl create secret generic my-secret --from-file=ssh-privatekey=~/."
#~ "ssh/id_rsa --from-file=ssh-publickey=~/.ssh/id_rsa.pub\n"
#~ "\n"
#~ "\t  # Erstelle ein neues Scret my-secret mit key1=supersecret und "
#~ "key2=topsecret\n"
#~ "\t  kubectl create secret generic my-secret --from-"
#~ "literal=key1=supersecret --from-literal=key2=topsecret"

#~ msgid ""
#~ "\n"
#~ "\t# Create a new ExternalName service named my-ns \n"
#~ "\tkubectl create service externalname my-ns --external-name bar.com"
#~ msgstr ""
#~ "\n"
#~ "\t# Erstelle einen neuen ExternalName-Service my-ns \n"
#~ "\tkubectl create service externalname my-ns --external-name bar.com"

#~ msgid ""
#~ "\n"
#~ "    # Create a new clusterIP service named my-cs\n"
#~ "    kubectl create service clusterip my-cs --tcp=5678:8080\n"
#~ "\n"
#~ "    # Create a new clusterIP service named my-cs (in headless mode)\n"
#~ "    kubectl create service clusterip my-cs --clusterip=\"None\""
#~ msgstr ""
#~ "\n"
#~ "    # Erstelle einen neuen ClusterIP-Service my-cs\n"
#~ "    kubectl create service clusterip my-cs --tcp=5678:8080\n"
#~ "\n"
#~ "    # Erstelle einen neuen ClusterIP-Service my-cs (im headless-Modus)\n"
#~ "    kubectl create service clusterip my-cs --clusterip=\"None\""

#~ msgid ""
#~ "\n"
#~ "    # Create a new deployment named my-dep that runs the busybox image.\n"
#~ "    kubectl create deployment my-dep --image=busybox"
#~ msgstr ""
#~ "\n"
#~ "    # Erstelle ein neues Deployment my-dep, dass das busybox-Image "
#~ "nutzt.\n"
#~ "    kubectl create deployment my-dep --image=busybox"

#~ msgid ""
#~ "\n"
#~ "    # Create a new nodeport service named my-ns\n"
#~ "    kubectl create service nodeport my-ns --tcp=5678:8080"
#~ msgstr ""
#~ "\n"
#~ "    # Erstelle einen neuen NodePort-Service my-ns\n"
#~ "    kubectl create service nodeport my-ns --tcp=5678:8080"

#~ msgid ""
#~ "\n"
#~ "    Create a clusterIP service with the specified name."
#~ msgstr ""
#~ "\n"
#~ "    Erstelle einen ClusterIP-Service mit dem gegebenen Namen."

#~ msgid ""
#~ "\n"
#~ "    Create a deployment with the specified name."
#~ msgstr ""
#~ "\n"
#~ "    Erstelle ein Deployment mit dem gegebenen Namen."

#~ msgid ""
#~ "\n"
#~ "    Create a nodeport service with the specified name."
#~ msgstr ""
#~ "\n"
#~ "    Erstelle einen NodePort-Service mit dem gegebenen Namen."

#~ msgid ""
#~ "\n"
#~ "  Display addresses of the master and services with label kubernetes.io/"
#~ "cluster-service=true\n"
#~ "  To further debug and diagnose cluster problems, use 'kubectl cluster-"
#~ "info dump'."
#~ msgstr ""
#~ "\n"
#~ "  Zeigt Adressen des Master und von Services mit Label kubernetes.io/"
#~ "cluster-service=true\n"
#~ "  Für das weitere Debugging und die Diagnose von Clusterproblemen nutze "
#~ "'kubectl cluster-info dump'."

#~ msgid "A schedule in the Cron format the job should be run with."
#~ msgstr "Ein Schedule im Cron Format, dass der Job nutzen soll."

#~ msgid "Apply a configuration to a resource by filename or stdin"
#~ msgstr ""
#~ "Wende eine Konfiguration auf eine Resource über den Dateinamen oder stdin "
#~ "an"

#~ msgid "Auto-scale a Deployment, ReplicaSet, or ReplicationController"
#~ msgstr "Auto-skaliere ein Deployment, ReplicaSet oder ReplicationController"

#~ msgid ""
#~ "Container name which will have its image upgraded. Only relevant when --"
#~ "image is specified, ignored otherwise. Required when using --image on a "
#~ "multi-container pod"
#~ msgstr ""
#~ "Name des Containers dessen Image aktualisiert wird. Nur relevant, wenn --"
#~ "image angegeben ist, sonst ignoriert. Verpflichtend, wenn --image auf "
#~ "einem Multi-Container-Pod verwendet wird"

#~ msgid "Create a ClusterRoleBinding for a particular ClusterRole"
#~ msgstr "Erstelle ein ClusterRoleBinding für eine bestimmte ClusterRole"

#~ msgid "Create a LoadBalancer service."
#~ msgstr "Erstelle einen LoadBalancer-Service."

#~ msgid "Create a NodePort service."
#~ msgstr "Erstelle einen NodePort-Service."

#~ msgid "Create a RoleBinding for a particular Role or ClusterRole"
#~ msgstr "Erstelle ein RoleBinding für eine bestimmte Role oder ClusterRole"

#~ msgid "Create a clusterIP service."
#~ msgstr "Erstelle einen ClusterIP-Service"

#~ msgid "Create a configmap from a local file, directory or literal value"
#~ msgstr ""
#~ "Erstelle eine ConfigMap von einer Datei, einem Ordner oder einem festen "
#~ "Wert"

#~ msgid "Create a deployment with the specified name."
#~ msgstr "Erstelle ein Deployment mit dem gegebenen Namen."

#~ msgid "Create a pod disruption budget with the specified name."
#~ msgstr "Erstelle ein Pod-Disruption-Budget mit dem gegebenen Namen."

#~ msgid "Create a quota with the specified name."
#~ msgstr "Erstelle eine Quota mit dem gegebenen Namen."

#~ msgid "Create a resource by filename or stdin"
#~ msgstr "Erstelle eine Resource von einer Datei oder stdin"

#~ msgid "Create a secret from a local file, directory or literal value"
#~ msgstr ""
#~ "Erstelle ein Secret von einer lokalen Datei, einem Ordner oder einem "
#~ "festen Wert"

#~ msgid "Create a service using specified subcommand."
#~ msgstr "Erstelle einen Servuce mit dem angegebenen Sub-Befehl"

#~ msgid "Create an ExternalName service."
#~ msgstr "Erstelle einen ExternalName-Service."

#~ msgid ""
#~ "Delete resources by filenames, stdin, resources and names, or by "
#~ "resources and label selector"
#~ msgstr ""
#~ "Lösche Resourcen von einer Datei, stdin, resources- und names- oder mit "
#~ "resources- und label-Selektor"

#~ msgid "Deprecated: Gracefully shut down a resource by name or filename"
#~ msgstr ""
#~ "Veraltet: Graziöses herunterfahren einer Resource über den Namen oder "
#~ "Dateinamen"

#~ msgid "Display Resource (CPU/Memory) usage of nodes"
#~ msgstr "Zeige Resourcennutzung (CPU/Memory) von Knoten"

#~ msgid "Display Resource (CPU/Memory) usage of pods"
#~ msgstr "Zeige Resourcennutzung (CPU/Memory) von Pods"

#~ msgid "Display Resource (CPU/Memory) usage."
#~ msgstr "Zeige Resourcennutzung (CPU/Memory)."

#~ msgid "Display cluster info"
#~ msgstr "Zeige Cluster-Info"

#~ msgid "Displays the current-context"
#~ msgstr "Zeige den aktuellen Kontext"

#~ msgid "Documentation of resources"
#~ msgstr "Dokumentation einer Resource"

#~ msgid "Dump lots of relevant info for debugging and diagnosis"
#~ msgstr "Zeige viele relevante Informationen für Debugging und Diagnose"

#~ msgid ""
#~ "Explicit policy for when to pull container images. Required when --image "
#~ "is same as existing image, ignored otherwise."
#~ msgstr ""
#~ "Explizite Vorgabe, wann Container-Images gepullt werden. Verpflichtend, "
#~ "wenn --image ist gleich dem aktuellen Image ist - sonst ignoriert."

#~ msgid ""
#~ "IP to assign to the Load Balancer. If empty, an ephemeral IP will be "
#~ "created and used (cloud-provider specific)."
#~ msgstr ""
#~ "IP, die dem Load-Balancer zugewiesen wird. Falls leer, wird eine "
#~ "temporäre IP erstellt und verwendet (Cloud-Provider spezifisch)"

#~ msgid "Manage a deployment rollout"
#~ msgstr "Verwalte ein Deployment-Rollout"

#~ msgid "Perform a rolling update of the given ReplicationController"
#~ msgstr "Führe ein Rolling-Update des gegebenen ReplicationControllers aus"

#~ msgid "Replace a resource by filename or stdin"
#~ msgstr "Ersetze eine Resource von einem Dateinamen oder stdin"

#~ msgid ""
#~ "Set a new size for a Deployment, ReplicaSet, Replication Controller, or "
#~ "Job"
#~ msgstr ""
#~ "Setze eine neue Größe für ein Deployment, ReplicaSet, "
#~ "ReplicationController oder Job"

#~ msgid ""
#~ "Set the last-applied-configuration annotation on a live object to match "
#~ "the contents of a file."
#~ msgstr ""
#~ "Setze die Annotation Last-Applied-Configuration auf einem Live-Objekt auf "
#~ "den Inhalt einer Datei."

#~ msgid "Sets a cluster entry in kubeconfig"
#~ msgstr "Setze einen Cluster-Eintrag in der kubeconfig"

#~ msgid "Sets a context entry in kubeconfig"
#~ msgstr "Setze einen Kontext-Eintrag in der kubeconfig"

#~ msgid "Sets a user entry in kubeconfig"
#~ msgstr "Setze einen User-Eintrag in der kubeconfig"

#~ msgid "Sets an individual value in a kubeconfig file"
#~ msgstr "Setze einen einzelnen Value in einer kubeconfig-Datei"

#~ msgid "Sets the current-context in a kubeconfig file"
#~ msgstr "Setze den aktuellen Kontext in einer kubeconfig-Datei"

#~ msgid ""
#~ "Take a replication controller, service, deployment or pod and expose it "
#~ "as a new Kubernetes Service"
#~ msgstr ""
#~ "Nehme einen Replication Controller, Service, Deployment oder Pod und "
#~ "biete ihn als neuen Kubernetes-Service an"

#~ msgid ""
#~ "The name of the API generator to use, see http://kubernetes.io/docs/user-"
#~ "guide/kubectl-conventions/#generators for a list."
#~ msgstr ""
#~ "Der Name des zu verwendenden API-Generators. Siehe http://kubernetes.io/"
#~ "docs/user-guide/kubectl-conventions/#generators für eine Übersicht."

#~ msgid ""
#~ "The name of the API generator to use. Currently there is only 1 generator."
#~ msgstr ""
#~ "Der Name des zu verwendenden API-Generators. Zur Zeit gibt es nur einen "
#~ "Generator."

#~ msgid ""
#~ "The name of the generator to use for creating a service.  Only used if --"
#~ "expose is true"
#~ msgstr ""
#~ "Der Name des zu verwendenden Generators, um einen Service zu erstellen. "
#~ "Wird nur benutzt, wenn --expose true ist"

#~ msgid ""
#~ "The port that this container exposes.  If --expose is true, this is also "
#~ "the port used by the service that is created."
#~ msgstr ""
#~ "Der Port, den der Container anbietet.  Wenn --expose true ist, ist es "
#~ "auch der Port, den der zu erstellende Service verwendet"

#~ msgid ""
#~ "Type for this service: ClusterIP, NodePort, or LoadBalancer. Default is "
#~ "'ClusterIP'."
#~ msgstr ""
#~ "Typ für diesen Service: ClusterIP, NodePort oder LoadBalancer. Standard "
#~ "ist 'ClusterIP'."

#~ msgid "Update field(s) of a resource using strategic merge patch"
#~ msgstr "Aktualisiere Felder einer Resource mit einem Strategic-Merge-Patch"

#~ msgid "Update image of a pod template"
#~ msgstr "Aktualisiere das Image einer Pod-Template"

#~ msgid ""
#~ "View latest last-applied-configuration annotations of a resource/object"
#~ msgstr ""
#~ "Zeige die aktuelle Annotation Last-Applied-Configuration einer Resource / "
#~ "eines Object"
