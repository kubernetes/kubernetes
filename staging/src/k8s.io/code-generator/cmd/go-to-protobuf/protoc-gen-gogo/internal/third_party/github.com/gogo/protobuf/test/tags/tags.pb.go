// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: tags.proto

package tags

import (
	fmt "fmt"
	_ "k8s.io/code-generator/cmd/go-to-protobuf/protoc-gen-gogo/internal/third_party/github.com/gogo/protobuf/gogoproto"
	proto "k8s.io/code-generator/cmd/go-to-protobuf/protoc-gen-gogo/internal/third_party/github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Outside struct {
	*Inside `protobuf:"bytes,1,opt,name=Inside,embedded=Inside" json:""`
	Field2  *string `protobuf:"bytes,2,opt,name=Field2" json:"MyField2" xml:",comment"`
	// Types that are valid to be assigned to Filed:
	//
	//	*Outside_Field3
	Filed                isOutside_Filed `protobuf_oneof:"filed"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Outside) Reset()         { *m = Outside{} }
func (m *Outside) String() string { return proto.CompactTextString(m) }
func (*Outside) ProtoMessage()    {}
func (*Outside) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7d9cbcae1e528f6, []int{0}
}
func (m *Outside) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Outside.Unmarshal(m, b)
}
func (m *Outside) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Outside.Marshal(b, m, deterministic)
}
func (m *Outside) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Outside.Merge(m, src)
}
func (m *Outside) XXX_Size() int {
	return xxx_messageInfo_Outside.Size(m)
}
func (m *Outside) XXX_DiscardUnknown() {
	xxx_messageInfo_Outside.DiscardUnknown(m)
}

var xxx_messageInfo_Outside proto.InternalMessageInfo

type isOutside_Filed interface {
	isOutside_Filed()
}

type Outside_Field3 struct {
	Field3 string `protobuf:"bytes,3,opt,name=Field3,oneof" json:"MyField3" xml:",comment"`
}

func (*Outside_Field3) isOutside_Filed() {}

func (m *Outside) GetFiled() isOutside_Filed {
	if m != nil {
		return m.Filed
	}
	return nil
}

func (m *Outside) GetField2() string {
	if m != nil && m.Field2 != nil {
		return *m.Field2
	}
	return ""
}

func (m *Outside) GetField3() string {
	if x, ok := m.GetFiled().(*Outside_Field3); ok {
		return x.Field3
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Outside) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Outside_Field3)(nil),
	}
}

type Inside struct {
	Field1               *string  `protobuf:"bytes,1,opt,name=Field1" json:"MyField1" xml:",chardata"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Inside) Reset()         { *m = Inside{} }
func (m *Inside) String() string { return proto.CompactTextString(m) }
func (*Inside) ProtoMessage()    {}
func (*Inside) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7d9cbcae1e528f6, []int{1}
}
func (m *Inside) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Inside.Unmarshal(m, b)
}
func (m *Inside) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Inside.Marshal(b, m, deterministic)
}
func (m *Inside) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Inside.Merge(m, src)
}
func (m *Inside) XXX_Size() int {
	return xxx_messageInfo_Inside.Size(m)
}
func (m *Inside) XXX_DiscardUnknown() {
	xxx_messageInfo_Inside.DiscardUnknown(m)
}

var xxx_messageInfo_Inside proto.InternalMessageInfo

func (m *Inside) GetField1() string {
	if m != nil && m.Field1 != nil {
		return *m.Field1
	}
	return ""
}

func init() {
	proto.RegisterType((*Outside)(nil), "tags.Outside")
	proto.RegisterType((*Inside)(nil), "tags.Inside")
}

func init() { proto.RegisterFile("tags.proto", fileDescriptor_e7d9cbcae1e528f6) }

var fileDescriptor_e7d9cbcae1e528f6 = []byte{
	// 293 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x8e, 0xcf, 0x4a, 0xf3, 0x40,
	0x14, 0xc5, 0x3b, 0xdf, 0x57, 0xfb, 0x67, 0x14, 0x85, 0xac, 0x8a, 0x8b, 0x4e, 0xc9, 0xaa, 0x0b,
	0x93, 0xa1, 0x0d, 0x68, 0x71, 0x67, 0x16, 0xa2, 0x0b, 0x11, 0xfa, 0x02, 0x32, 0xcd, 0x4c, 0x27,
	0x83, 0x49, 0xa6, 0x4c, 0x6e, 0xc0, 0xe2, 0x6b, 0xf9, 0x20, 0x3e, 0x41, 0xc0, 0x6d, 0x97, 0x5d,
	0xb9, 0x94, 0x4c, 0xa6, 0x22, 0x74, 0x77, 0xee, 0xe5, 0xfc, 0x0e, 0x3f, 0x8c, 0x81, 0xc9, 0x32,
	0xdc, 0x18, 0x0d, 0xda, 0xeb, 0x36, 0xf9, 0xf2, 0xfd, 0x75, 0x51, 0x86, 0x4a, 0xd3, 0x44, 0x73,
	0x11, 0x48, 0x51, 0x08, 0xc3, 0x40, 0x1b, 0x9a, 0xe4, 0x9c, 0x4a, 0x1d, 0x80, 0x0e, 0x6c, 0x79,
	0x55, 0xad, 0xa9, 0x0d, 0x49, 0xd3, 0x09, 0xa4, 0x96, 0x9a, 0xaa, 0x02, 0x84, 0x29, 0x58, 0x46,
	0x21, 0x55, 0x86, 0xbf, 0x6c, 0x98, 0x81, 0x2d, 0x95, 0x0a, 0xd2, 0x6a, 0x15, 0x26, 0x3a, 0xa7,
	0xb6, 0xf4, 0x4b, 0x37, 0x97, 0x3d, 0x6c, 0x6a, 0x15, 0xfc, 0x0f, 0x84, 0xfb, 0xcf, 0x15, 0x94,
	0x8a, 0x0b, 0x2f, 0xc4, 0xbd, 0xc7, 0xa2, 0x49, 0x23, 0x34, 0x41, 0xd3, 0xd3, 0xf9, 0x59, 0x68,
	0x5d, 0xdb, 0x5f, 0x3c, 0xf8, 0xac, 0x09, 0xda, 0xd5, 0xa4, 0xb3, 0x74, 0x2d, 0xef, 0x1a, 0xf7,
	0xee, 0x95, 0xc8, 0xf8, 0x7c, 0xf4, 0x6f, 0x82, 0xa6, 0xc3, 0x78, 0xbc, 0xab, 0xc9, 0xe0, 0x69,
	0xdb, 0xfe, 0xf6, 0x35, 0x39, 0x7f, 0xcb, 0xb3, 0x5b, 0xff, 0x2a, 0xd1, 0x79, 0x2e, 0x0a, 0xf0,
	0x97, 0xae, 0xed, 0x2d, 0x1c, 0x17, 0x8d, 0xfe, 0x1f, 0x71, 0xd1, 0x31, 0xf7, 0xd0, 0x71, 0x64,
	0x14, 0xf7, 0xf1, 0xc9, 0x5a, 0x65, 0x82, 0xfb, 0x77, 0x07, 0x55, 0xef, 0xc6, 0x8d, 0xcd, 0xac,
	0xf4, 0x30, 0x26, 0x7f, 0xc6, 0x66, 0xfb, 0x9a, 0x5c, 0xb8, 0xb1, 0x94, 0x19, 0xce, 0x80, 0x1d,
	0x2c, 0x66, 0x71, 0xf7, 0xfb, 0x6b, 0x8c, 0x7e, 0x02, 0x00, 0x00, 0xff, 0xff, 0x73, 0x97, 0x37,
	0x7c, 0x8f, 0x01, 0x00, 0x00,
}

func NewPopulatedOutside(r randyTags, easy bool) *Outside {
	this := &Outside{}
	if r.Intn(5) != 0 {
		this.Inside = NewPopulatedInside(r, easy)
	}
	if r.Intn(5) != 0 {
		v1 := string(randStringTags(r))
		this.Field2 = &v1
	}
	oneofNumber_Filed := []int32{3}[r.Intn(1)]
	switch oneofNumber_Filed {
	case 3:
		this.Filed = NewPopulatedOutside_Field3(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedTags(r, 4)
	}
	return this
}

func NewPopulatedOutside_Field3(r randyTags, easy bool) *Outside_Field3 {
	this := &Outside_Field3{}
	this.Field3 = string(randStringTags(r))
	return this
}
func NewPopulatedInside(r randyTags, easy bool) *Inside {
	this := &Inside{}
	if r.Intn(5) != 0 {
		v2 := string(randStringTags(r))
		this.Field1 = &v2
	}
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedTags(r, 2)
	}
	return this
}

type randyTags interface {
	Float32() float32
	Float64() float64
	Int63() int64
	Int31() int32
	Uint32() uint32
	Intn(n int) int
}

func randUTF8RuneTags(r randyTags) rune {
	ru := r.Intn(62)
	if ru < 10 {
		return rune(ru + 48)
	} else if ru < 36 {
		return rune(ru + 55)
	}
	return rune(ru + 61)
}
func randStringTags(r randyTags) string {
	v3 := r.Intn(100)
	tmps := make([]rune, v3)
	for i := 0; i < v3; i++ {
		tmps[i] = randUTF8RuneTags(r)
	}
	return string(tmps)
}
func randUnrecognizedTags(r randyTags, maxFieldNumber int) (dAtA []byte) {
	l := r.Intn(5)
	for i := 0; i < l; i++ {
		wire := r.Intn(4)
		if wire == 3 {
			wire = 5
		}
		fieldNumber := maxFieldNumber + r.Intn(100)
		dAtA = randFieldTags(dAtA, r, fieldNumber, wire)
	}
	return dAtA
}
func randFieldTags(dAtA []byte, r randyTags, fieldNumber int, wire int) []byte {
	key := uint32(fieldNumber)<<3 | uint32(wire)
	switch wire {
	case 0:
		dAtA = encodeVarintPopulateTags(dAtA, uint64(key))
		v4 := r.Int63()
		if r.Intn(2) == 0 {
			v4 *= -1
		}
		dAtA = encodeVarintPopulateTags(dAtA, uint64(v4))
	case 1:
		dAtA = encodeVarintPopulateTags(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	case 2:
		dAtA = encodeVarintPopulateTags(dAtA, uint64(key))
		ll := r.Intn(100)
		dAtA = encodeVarintPopulateTags(dAtA, uint64(ll))
		for j := 0; j < ll; j++ {
			dAtA = append(dAtA, byte(r.Intn(256)))
		}
	default:
		dAtA = encodeVarintPopulateTags(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	}
	return dAtA
}
func encodeVarintPopulateTags(dAtA []byte, v uint64) []byte {
	for v >= 1<<7 {
		dAtA = append(dAtA, uint8(uint64(v)&0x7f|0x80))
		v >>= 7
	}
	dAtA = append(dAtA, uint8(v))
	return dAtA
}
